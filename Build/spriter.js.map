{"version":3,"file":"spriter.js","mappings":"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","sources":["webpack://Spriter/webpack/universalModuleDefinition","webpack://Spriter/./src/Spriter/IdNameMap.ts","webpack://Spriter/./src/Spriter/LineStepper.ts","webpack://Spriter/./src/Spriter/Loader/Loader.ts","webpack://Spriter/./src/Spriter/Loader/NodeListJSON.ts","webpack://Spriter/./src/Spriter/Loader/NodeListXml.ts","webpack://Spriter/./src/Spriter/Loader/SpriterFile.ts","webpack://Spriter/./src/Spriter/Loader/SpriterJSON.ts","webpack://Spriter/./src/Spriter/Loader/SpriterXml.ts","webpack://Spriter/./src/Spriter/Math.ts","webpack://Spriter/./src/Spriter/Spriter.ts","webpack://Spriter/./src/Spriter/SpriterBone.ts","webpack://Spriter/./src/Spriter/SpriterGroup.ts","webpack://Spriter/./src/Spriter/SpriterObject.ts","webpack://Spriter/./src/Spriter/Structure/Animation.ts","webpack://Spriter/./src/Spriter/Structure/Baseline.ts","webpack://Spriter/./src/Spriter/Structure/CharMap.ts","webpack://Spriter/./src/Spriter/Structure/CharMapStack.ts","webpack://Spriter/./src/Spriter/Structure/Entity.ts","webpack://Spriter/./src/Spriter/Structure/File.ts","webpack://Spriter/./src/Spriter/Structure/Folder.ts","webpack://Spriter/./src/Spriter/Structure/Item.ts","webpack://Spriter/./src/Spriter/Structure/Key.ts","webpack://Spriter/./src/Spriter/Structure/KeyBone.ts","webpack://Spriter/./src/Spriter/Structure/KeyMainline.ts","webpack://Spriter/./src/Spriter/Structure/KeyObject.ts","webpack://Spriter/./src/Spriter/Structure/KeyTag.ts","webpack://Spriter/./src/Spriter/Structure/KeyTimeline.ts","webpack://Spriter/./src/Spriter/Structure/KeyVariable.ts","webpack://Spriter/./src/Spriter/Structure/ObjectInfo.ts","webpack://Spriter/./src/Spriter/Structure/Ref.ts","webpack://Spriter/./src/Spriter/Structure/SpatialInfo.ts","webpack://Spriter/./src/Spriter/Structure/Timeline.ts","webpack://Spriter/./src/Spriter/Structure/Types.ts","webpack://Spriter/./src/Spriter/Structure/Variable.ts","webpack://Spriter/./src/Spriter/Structure/Varline.ts","webpack://Spriter/./src/Spriter/index.ts","webpack://Spriter/webpack/bootstrap","webpack://Spriter/webpack/before-startup","webpack://Spriter/webpack/startup","webpack://Spriter/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Spriter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Spriter\"] = factory();\n\telse\n\t\troot[\"Spriter\"] = factory();\n})(self, () => {\nreturn ","export class IdNameMap<T> {\r\n\r\n    private _items: T[] = [];\r\n    private _itemNames: number[] = [];  // keys are names and returned value is index into _tems array\r\n\r\n    // -------------------------------------------------------------------------\r\n    public add(item: T, id?: number, name?: string) {\r\n        if (id === undefined) {\r\n            id = this._items.length;\r\n        }\r\n\r\n        if (name === undefined || name === null) {\r\n            name = \"item_\" + id;\r\n        }\r\n\r\n        this._items[id] = item;\r\n        this._itemNames[name] = id;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getById(id: number): T {\r\n        return this._items[id];\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getByName(name: string) {\r\n        var id = this._itemNames[name];\r\n\r\n        // TODO remove\r\n        if (typeof id !== \"number\") {\r\n            console.warn(\"item \" + name + \"  not found!\");\r\n        }\r\n\r\n        return (typeof id === \"number\") ? this._items[id] : null;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get length(): number {\r\n        return this._items.length;\r\n    }\r\n}\r\n","import { Baseline } from \"./Structure/Baseline\";\r\nimport { Key }      from \"./Structure/Key\";\r\n\r\nexport class LineStepper {\r\n\r\n    private _line: Baseline;\r\n\r\n    private _currentIndex: number;\r\n    private _nextIndex: number;\r\n    private _lastTime: number;\r\n\r\n    // -------------------------------------------------------------------------\r\n    public constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get current(): Key {\r\n        return this._line.at(this._currentIndex);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get currentIndex(): number {\r\n        return this._currentIndex;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get next(): Key {\r\n        return this._line.at(this._nextIndex);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get nextIndex(): number {\r\n        return this._nextIndex;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public set lastTime(time: number) {\r\n        this._lastTime = time;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public set line(line: Baseline) {\r\n        this._line = line;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get line(): Baseline {\r\n        return this._line;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public reset(): void {\r\n        this._lastTime = -1;\r\n        this._currentIndex = -1;\r\n        this._nextIndex = 0;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public step(time: number): Key {\r\n        var index = this._nextIndex;\r\n\r\n        // get key at current position\r\n        var key = this._line.keys[index];\r\n        var keyTime = key.time;\r\n        // if current key time is bigger than time for stepTo, then we must first go till end of timeline and then continue from beginning\r\n        var loop = time < this._lastTime;\r\n\r\n        if ((!loop && (keyTime > this._lastTime && keyTime <= time)) ||\r\n            (loop && (keyTime > this._lastTime || keyTime <= time))) {\r\n\r\n            this._lastTime = keyTime;\r\n            this._currentIndex = index;\r\n\r\n            if ((++index) >= this._line.keys.length) {\r\n                index = 0;\r\n            }\r\n            this._nextIndex = index;\r\n\r\n            return key;\r\n        } else if (loop) {\r\n            this._lastTime = -1;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","import { Spriter } from \"../Spriter\";\r\nimport { eFileType, SpriterFile } from \"./SpriterFile\";\r\nimport { ISpriterNodeList } from \"./ISpriterNodeList\";\r\nimport { Folder } from \"../Structure/Folder\";\r\nimport { Entity } from \"../Structure/Entity\";\r\nimport { CharMap } from \"../Structure/CharMap\";\r\nimport { Animation } from \"../Structure/Animation\";\r\nimport { eTimelineType, Baseline } from \"../Structure/Baseline\";\r\nimport { Timeline } from \"../Structure/Timeline\";\r\nimport { Varline } from \"../Structure/Varline\";\r\nimport { eVariableType } from \"../Structure/Types\";\r\n\r\nexport class Loader {\r\n\r\n    private _spriter: Spriter;\r\n    private _fileType: eFileType;\r\n\r\n    // -------------------------------------------------------------------------\r\n    public load(file: SpriterFile): Spriter {\r\n\r\n        this._spriter = new Spriter();\r\n        this._fileType = file.getType();\r\n\r\n        // folders and files\r\n        var folders = file.getNodes(\"folder\");\r\n        this.loadFolders(this._spriter, folders);\r\n        folders.processed();\r\n\r\n        // tags\r\n        var tags = file.getNodes(\"tag_list\");\r\n        this.loadTags(this._spriter, tags);\r\n        tags.processed();\r\n\r\n        // entity\r\n        var entities = file.getNodes(\"entity\");\r\n        this.loadEntities(this._spriter, entities);\r\n        entities.processed();\r\n\r\n        return this._spriter;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadFolders(spriter: Spriter, folders: ISpriterNodeList): void {\r\n        // through all folders\r\n        for (var i = 0; i < folders.length(); i++) {\r\n            var folder = folders.getFolder(i);\r\n\r\n            // images in folder - ignore sounds\r\n            var files = folders.getChildNodes(i, \"file\");\r\n            this.loadFiles(folder, files);\r\n            files.processed();\r\n\r\n            // add folder to spriter object\r\n            spriter.addFolder(folder);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadFiles(folder: Folder, files: ISpriterNodeList): void {\r\n        for (var f = 0; f < files.length(); f++) {\r\n            var file = files.getFile(f);\r\n\r\n            // null is returned if file is not image but sound\r\n            if (file !== null) {\r\n                folder.addFile(file);\r\n            }\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadTags(spriter: Spriter, tags: ISpriterNodeList): void {\r\n        // no tags\r\n        if (tags.length() === 0) {\r\n            return;\r\n        }\r\n\r\n        // different structure for json than for xml\r\n        var tagDefs: ISpriterNodeList;\r\n        if (this._fileType !== eFileType.JSON) {\r\n            tagDefs = tags.getChildNodes(0, \"i\");\r\n        } else {\r\n            tagDefs = tags;\r\n        }\r\n\r\n        for (var i = 0; i < tagDefs.length(); i++) {\r\n            var tag = tagDefs.getTag(i);\r\n            spriter.addTag(tag);\r\n        }\r\n\r\n        // different structure for json than for xml\r\n        if (this._fileType !== eFileType.JSON) {\r\n            tagDefs.processed();\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadEntities(spriter: Spriter, entities: ISpriterNodeList): void {\r\n        for (var i = 0; i < entities.length(); i++) {\r\n            var entity = entities.getEntity(i);\r\n\r\n            // bones, boxes, ...\r\n            var objInfos = entities.getChildNodes(i, \"obj_info\");\r\n            this.loadObjInfo(entity, objInfos);\r\n            objInfos.processed();\r\n\r\n            // character maps\r\n            var charMaps = entities.getChildNodes(i, \"character_map\");\r\n            this.loadCharMaps(entity, charMaps);\r\n            charMaps.processed();\r\n\r\n            // variable definitions\r\n            var variables = entities.getChildNodes(i, \"var_defs\");\r\n            this.loadVariables(entity, variables);\r\n            variables.processed();\r\n\r\n            // animations\r\n            var animations = entities.getChildNodes(i, \"animation\");\r\n            this.loadAnimations(entity, animations);\r\n            animations.processed();\r\n\r\n            spriter.addEntity(entity);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadObjInfo(entity: Entity, objInfos: ISpriterNodeList): void {\r\n        for (var i = 0; i < objInfos.length(); i++) {\r\n            var objInfo = objInfos.getObjectInfo(i);\r\n            entity.addObjectInfo(objInfo);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadCharMaps(entity: Entity, charMaps: ISpriterNodeList): void {\r\n        for (var i = 0; i < charMaps.length(); i++) {\r\n            var charMap = charMaps.getCharMap(i);\r\n\r\n            var charMapEntries = charMaps.getChildNodes(i, \"map\");\r\n            this.loadCharMapEntries(charMap, charMapEntries);\r\n            charMapEntries.processed();\r\n\r\n            entity.addCharMap(charMap);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadCharMapEntries(charMap: CharMap, charMapEntries: ISpriterNodeList): void {\r\n        for (var i = 0; i < charMapEntries.length(); i++) {\r\n            charMapEntries.getCharMapEntry(i, charMap, this._spriter);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadVariables(entity: Entity, variables: ISpriterNodeList): void {\r\n        // no variables\r\n        if (variables.length() === 0) {\r\n            return;\r\n        }\r\n\r\n        // different structure for json than for xml\r\n        var varDefs: ISpriterNodeList;\r\n        if (this._fileType !== eFileType.JSON) {\r\n            varDefs = variables.getChildNodes(0, \"i\");\r\n        } else {\r\n            varDefs = variables;\r\n        }\r\n\r\n        for (var i = 0; i < varDefs.length(); i++) {\r\n            var varDef = varDefs.getVariable(i);\r\n            entity.addVariable(varDef);\r\n        }\r\n\r\n        // different structure for json than for xml\r\n        if (this._fileType !== eFileType.JSON) {\r\n            varDefs.processed();\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadAnimations(entity: Entity, animations: ISpriterNodeList): void {\r\n        for (var i = 0; i < animations.length(); i++) {\r\n            var animation = animations.getAnimation(i);\r\n\r\n            // main line keys\r\n            var mainlines = animations.getChildNodes(i, \"mainline\");\r\n            this.loadMainline(animation, mainlines);\r\n            mainlines.processed();\r\n\r\n            // timelines\r\n            var timelines = animations.getChildNodes(i, \"timeline\");\r\n            this.loadTimelines(animation, timelines);\r\n            timelines.processed();\r\n\r\n            // sound lines\r\n            var soundlines = animations.getChildNodes(i, \"soundline\");\r\n            this.loadSoundlines(animation, soundlines);\r\n            soundlines.processed();\r\n\r\n            // event lines\r\n            var eventlines = animations.getChildNodes(i, \"eventline\");\r\n            this.loadEventlines(animation, eventlines);\r\n            eventlines.processed();\r\n\r\n            // get meta tag\r\n            var meta = animations.getChildNodes(i, \"meta\");\r\n            if (meta.length() > 0) {\r\n                // var lines\r\n                // OMG - typo in attribute name in JSOUN export... what the hell! TODO - remove when corrected\r\n                var varlines = meta.getChildNodes(0, (this._fileType !== eFileType.JSON) ? \"varline\" : \"valline\");\r\n                this.loadVarlines(entity, animation, varlines);\r\n                varlines.processed();\r\n\r\n                // tag lines\r\n                var taglines = meta.getChildNodes(0, \"tagline\");\r\n                this.loadTaglines(animation, taglines);\r\n                taglines.processed();\r\n            }\r\n            meta.processed();\r\n\r\n            // add completely built animation to entity\r\n            entity.addAnimation(animation);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadMainline(animation: Animation, mainlines: ISpriterNodeList): void {\r\n        var mainline = mainlines.getMainline(0);\r\n        mainline.type = eTimelineType.MAIN_LINE;\r\n\r\n        var mainlineKeys = mainlines.getChildNodes(0, \"key\");\r\n        this.loadMainlineKeys(mainline, mainlineKeys);\r\n        mainlineKeys.processed();\r\n\r\n        animation.mainline = mainline;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadMainlineKeys(mainline: Baseline, mainlineKeys: ISpriterNodeList): void {\r\n        for (var i = 0; i < mainlineKeys.length(); i++) {\r\n            var mainLineKey = mainlineKeys.getMainlineKey(i);\r\n\r\n            // load bone refs\r\n            var boneRefs = mainlineKeys.getChildNodes(i, \"bone_ref\");\r\n            for (var b = 0; b < boneRefs.length(); b++) {\r\n                mainLineKey.addBoneRef(boneRefs.getRef(b));\r\n            }\r\n            boneRefs.processed();\r\n\r\n            // load sprite refs (object refs)\r\n            var spriteRefs = mainlineKeys.getChildNodes(i, \"object_ref\");\r\n            for (var s = 0; s < spriteRefs.length(); s++) {\r\n                mainLineKey.addObjectRef(spriteRefs.getRef(s));\r\n            }\r\n            spriteRefs.processed();\r\n\r\n            mainline.add(mainLineKey);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadTimelines(animation: Animation, aTimelines: ISpriterNodeList): void {\r\n        for (var i = 0; i < aTimelines.length(); i++) {\r\n            var timeline = aTimelines.getTimeline(i);\r\n\r\n            var keys = aTimelines.getChildNodes(i, \"key\");\r\n            this.loadTimelineKeys(timeline, keys);\r\n            keys.processed();\r\n\r\n            animation.addTimeline(timeline);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadTimelineKeys(aTimeline: Timeline, aKeys: ISpriterNodeList): void {\r\n        for (var i = 0; i < aKeys.length(); i++) {\r\n            var key = aKeys.getTimelineKey(i, this._spriter);\r\n            aTimeline.add(key);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadSoundlines(animation: Animation, soundlines: ISpriterNodeList): void {\r\n        for (var i = 0; i < soundlines.length(); i++) {\r\n            var soundline = soundlines.getSoundline(i);\r\n            soundline.type = eTimelineType.SOUND_LINE;\r\n\r\n            var keys = soundlines.getChildNodes(i, \"key\");\r\n            this.loadKeys(soundline, keys);\r\n            keys.processed();\r\n\r\n            animation.addLine(soundline);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadKeys(timeline: Baseline, keys: ISpriterNodeList): void {\r\n        for (var i = 0; i < keys.length(); i++) {\r\n            var key = keys.getKey(i);\r\n            timeline.add(key);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadEventlines(animation: Animation, eventlines: ISpriterNodeList): void {\r\n        for (var i = 0; i < eventlines.length(); i++) {\r\n            var eventline = eventlines.getEventline(i);\r\n            eventline.type = eTimelineType.EVENT_LINE;\r\n\r\n            var keys = eventlines.getChildNodes(i, \"key\");\r\n            this.loadKeys(eventline, keys);\r\n            keys.processed();\r\n\r\n            animation.addLine(eventline);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadTaglines(animation: Animation, taglines: ISpriterNodeList): void {\r\n        for (var i = 0; i < taglines.length(); i++) {\r\n            var tagline = taglines.getTagline(i);\r\n            tagline.type = eTimelineType.TAG_LINE;\r\n\r\n            var keys = taglines.getChildNodes(i, \"key\");\r\n            this.loadTagKeys(tagline, keys);\r\n            keys.processed();\r\n\r\n            animation.addLine(tagline);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadTagKeys(tagline: Baseline, keys: ISpriterNodeList): void {\r\n        for (var i = 0; i < keys.length(); i++) {\r\n            var key = keys.getTagKey(i);\r\n\r\n            var tagChangeElements = keys.getChildNodes(i, \"tag\");\r\n            var tagChanges = tagChangeElements.getTagChanges(this._spriter);\r\n            tagChangeElements.processed();\r\n\r\n            key.tagsOn = tagChanges;\r\n\r\n            tagline.add(key);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadVarlines(entity: Entity, animation: Animation, varlines: ISpriterNodeList): void {\r\n        for (var i = 0; i < varlines.length(); i++) {\r\n            var varline = varlines.getVarline(i);\r\n\r\n            var type = entity.getVariableById(varline.varDefId).type;\r\n\r\n            var keys = varlines.getChildNodes(i, \"key\");\r\n            this.loadVariableKeys(varline, keys, type);\r\n            keys.processed();\r\n\r\n            animation.addLine(varline);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadVariableKeys(varline: Varline, keys: ISpriterNodeList, type: eVariableType): void {\r\n        for (var i = 0; i < keys.length(); i++) {\r\n            var key = keys.getVariableKey(i, type);\r\n            varline.add(key);\r\n        }\r\n    }\r\n}\r\n","import { Spriter }          from \"../Spriter\";\r\nimport { Animation }        from \"../Structure/Animation\";\r\nimport { Baseline }         from \"../Structure/Baseline\";\r\nimport { CharMap }          from \"../Structure/CharMap\";\r\nimport { Entity }           from \"../Structure/Entity\";\r\nimport { File }             from \"../Structure/File\";\r\nimport { Folder }           from \"../Structure/Folder\";\r\nimport { Item }             from \"../Structure/Item\";\r\nimport { Key }              from \"../Structure/Key\";\r\nimport { KeyMainline }      from \"../Structure/KeyMainline\";\r\nimport { KeyTag }           from \"../Structure/KeyTag\";\r\nimport { KeyTimeline }      from \"../Structure/KeyTimeline\";\r\nimport { KeyVariable }      from \"../Structure/KeyVariable\";\r\nimport { ObjectInfo }       from \"../Structure/ObjectInfo\";\r\nimport { Ref }              from \"../Structure/Ref\";\r\nimport { Timeline }         from \"../Structure/Timeline\";\r\nimport { eVariableType }    from \"../Structure/Types\";\r\nimport { Variable }         from \"../Structure/Variable\";\r\nimport { Varline }          from \"../Structure/Varline\";\r\nimport { ISpriterNodeList } from \"./ISpriterNodeList\";\r\nimport { SpriterJSON }      from \"./SpriterJSON\";\r\n\r\nexport class NodeListJSON implements ISpriterNodeList {\r\n\r\n    private _file: SpriterJSON;\r\n    private _nodeList: any;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor(spriterJSONFile: SpriterJSON, nodeList: any) {\r\n        this._file = spriterJSONFile;\r\n        this._nodeList = nodeList;\r\n\r\n        if (!Array.isArray(nodeList)) {\r\n            nodeList.length = 1;\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public length(): number {\r\n        return this._nodeList.length;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public processed(): void {\r\n        this._file.processed();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private getNode(index): any {\r\n        if (Array.isArray(this._nodeList)) {\r\n            return this._nodeList[index];\r\n        } else {\r\n            return this._nodeList;\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getChildNodes(index: number, elementName: string): ISpriterNodeList {\r\n        return this._file.getNodesForElement(this.getNode(index), elementName);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getFolder(index: number): Folder {\r\n        return this._file.getFolder(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getFile(index: number): File {\r\n        return this._file.getFile(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTag(index: number): Item {\r\n        return this._file.getTag(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getEntity(index: number): Entity {\r\n        return this._file.getEntity(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getObjectInfo(index: number): ObjectInfo {\r\n        return this._file.getObjectInfo(this.getNode(index), index);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getCharMap(index: number): CharMap {\r\n        return this._file.getCharMap(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getCharMapEntry(index: number, charMap: CharMap, spriter: Spriter): void {\r\n        this._file.getCharMapEntry(this.getNode(index), charMap, spriter);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVariable(index: number): Variable {\r\n        return this._file.getVariable(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getAnimation(index: number): Animation {\r\n        return this._file.getAnimation(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getMainline(index: number): Baseline {\r\n        return this._file.getBaseline(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getMainlineKey(index: number): KeyMainline {\r\n        return this._file.getMainlineKey(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getRef(index: number): Ref {\r\n        return this._file.getRef(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTimeline(index: number): Timeline {\r\n        return this._file.getTimeline(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getSoundline(index: number): Baseline {\r\n        return this._file.getBaseline(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getEventline(index: number): Baseline {\r\n        return this._file.getBaseline(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTagline(index: number): Baseline {\r\n        return this._file.getBaseline(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVarline(index: number): Varline {\r\n        return this._file.getVarline(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getKey(index: number): Key {\r\n        return this._file.getKey(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTagKey(index: number): KeyTag {\r\n        return this._file.getTagKey(this.getNode(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVariableKey(index: number, type: eVariableType): KeyVariable {\r\n        return this._file.getVariableKey(this.getNode(index), type);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTimelineKey(index: number, spriter: Spriter): KeyTimeline {\r\n        return this._file.getTimelineKey(this.getNode(index), index, spriter);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTagChanges(spriter: Spriter): number {\r\n        var tags = 0;\r\n\r\n        for (var i = 0; i < this.length(); i++) {\r\n            var tagIndex = this._file.getTagChange(this.getNode(i));\r\n            tags |= (1 << tagIndex);\r\n        }\r\n\r\n        return tags;\r\n    }\r\n}\r\n","import { Spriter }          from \"../Spriter\";\r\nimport { Animation }        from \"../Structure/Animation\";\r\nimport { Baseline }         from \"../Structure/Baseline\";\r\nimport { CharMap }          from \"../Structure/CharMap\";\r\nimport { Entity }           from \"../Structure/Entity\";\r\nimport { File }             from \"../Structure/File\";\r\nimport { Folder }           from \"../Structure/Folder\";\r\nimport { Item }             from \"../Structure/Item\";\r\nimport { Key }              from \"../Structure/Key\";\r\nimport { KeyMainline }      from \"../Structure/KeyMainline\";\r\nimport { KeyTag }           from \"../Structure/KeyTag\";\r\nimport { KeyTimeline }      from \"../Structure/KeyTimeline\";\r\nimport { KeyVariable }      from \"../Structure/KeyVariable\";\r\nimport { ObjectInfo }       from \"../Structure/ObjectInfo\";\r\nimport { Ref }              from \"../Structure/Ref\";\r\nimport { Timeline }         from \"../Structure/Timeline\";\r\nimport { eVariableType }    from \"../Structure/Types\";\r\nimport { Variable }         from \"../Structure/Variable\";\r\nimport { Varline }          from \"../Structure/Varline\";\r\nimport { ISpriterNodeList } from \"./ISpriterNodeList\";\r\nimport { SpriterXml }       from \"./SpriterXml\";\r\n\r\nexport class NodeListXml implements ISpriterNodeList {\r\n\r\n    private _file: SpriterXml;\r\n    private _nodeList: HTMLCollectionOf<Element>; //NodeList;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor(spriterXmlFile: SpriterXml, nodeList: HTMLCollectionOf<Element> /*NodeList*/) {\r\n        this._file = spriterXmlFile;\r\n        this._nodeList = nodeList;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public length(): number {\r\n        return this._nodeList.length;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public processed(): void {\r\n        this._file.processed();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getChildNodes(index: number, elementName: string): ISpriterNodeList {\r\n        return this._file.getNodesForElement(<Element>this._nodeList.item(index), elementName);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getFolder(index: number): Folder {\r\n        return this._file.getFolder(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getFile(index: number): File {\r\n        return this._file.getFile(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTag(index: number): Item {\r\n        return this._file.getTag(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getEntity(index: number): Entity {\r\n        return this._file.getEntity(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getObjectInfo(index: number): ObjectInfo {\r\n        return this._file.getObjectInfo(<Element>this._nodeList.item(index), index);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getCharMap(index: number): CharMap {\r\n        return this._file.getCharMap(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getCharMapEntry(index: number, charMap: CharMap, spriter: Spriter): void {\r\n        this._file.getCharMapEntry(<Element>this._nodeList.item(index), charMap, spriter);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVariable(index: number): Variable {\r\n        return this._file.getVariable(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getAnimation(index: number): Animation {\r\n        return this._file.getAnimation(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getMainline(index: number): Baseline {\r\n        return this._file.getBaseline(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getMainlineKey(index: number): KeyMainline {\r\n        return this._file.getMainlineKey(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getRef(index: number): Ref {\r\n        return this._file.getRef(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTimeline(index: number): Timeline {\r\n        return this._file.getTimeline(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getSoundline(index: number): Baseline {\r\n        return this._file.getBaseline(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getEventline(index: number): Baseline {\r\n        return this._file.getBaseline(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTagline(index: number): Baseline {\r\n        return this._file.getBaseline(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVarline(index: number): Varline {\r\n        return this._file.getVarline(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getKey(index: number): Key {\r\n        return this._file.getKey(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTagKey(index: number): KeyTag {\r\n        return this._file.getTagKey(<Element>this._nodeList.item(index));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVariableKey(index: number, type: eVariableType): KeyVariable {\r\n        return this._file.getVariableKey(<Element>this._nodeList.item(index), type);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTimelineKey(index: number, spriter: Spriter): KeyTimeline {\r\n        return this._file.getTimelineKey(<Element>this._nodeList.item(index), index, spriter);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTagChanges(spriter: Spriter): number {\r\n        var tags = 0;\r\n\r\n        for (var i = 0; i < this.length(); i++) {\r\n            var tagIndex = this._file.getTagChange(<Element>this._nodeList.item(i));\r\n            tags |= (1 << tagIndex);\r\n        }\r\n\r\n        return tags;\r\n    }\r\n}\r\n","import { ISpriterNodeList } from \"./ISpriterNodeList\";\r\n\r\nexport enum eFileType { XML, JSON, BIN }\r\n\r\nexport enum eImageNameType { ORIGINAL, NAME_ONLY, NAME_AND_EXTENSION, FULL_PATH_NO_EXTENSION }\r\n\r\nexport interface IFileOptions {\r\n    imageNameType?: eImageNameType;\r\n    minDefs?: any;\r\n}\r\n\r\nexport abstract class SpriterFile {\r\n\r\n    protected _minimized: boolean;\r\n    private _minDefs: any;\r\n    private _minDefsStack: any[];\r\n\r\n    private _imageNameType: eImageNameType;\r\n\r\n    // -------------------------------------------------------------------------\r\n    public constructor(options: IFileOptions) {\r\n\r\n        let hasOptions = typeof options !== \"undefined\" && options !== null;\r\n\r\n        // type of image names (path / name / extension)\r\n        this._imageNameType = (hasOptions && typeof options.imageNameType !== \"undefined\") ? options.imageNameType : eImageNameType.NAME_ONLY;\r\n        // min defs are present?\r\n        this._minDefs = (hasOptions && typeof options.minDefs !== \"undefined\") ? options.minDefs : null;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public abstract getNodes(nodeName: string): ISpriterNodeList;\r\n\r\n    // -------------------------------------------------------------------------\r\n    public abstract getType(): eFileType;\r\n\r\n    // -------------------------------------------------------------------------\r\n    public processed(): void {\r\n        this.popMinDefsStack();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    protected setMinimized(minimized: boolean) {\r\n        this._minimized = minimized;\r\n\r\n        if (minimized) {\r\n            this._minDefsStack = [];\r\n\r\n            if (this._minDefs === null) {\r\n                console.error(\"Spriter file is minimized - you must provide object with name definitions\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    protected getFileName(path: string): string {\r\n\r\n        let name: string;\r\n\r\n        switch (this._imageNameType) {\r\n            case eImageNameType.NAME_ONLY:\r\n                name = (path.split('\\\\').pop().split('/').pop().split('.'))[0];\r\n                break;\r\n\r\n            case eImageNameType.NAME_AND_EXTENSION:\r\n                name = path.split('\\\\').pop().split('/').pop();\r\n                break;\r\n\r\n            case eImageNameType.FULL_PATH_NO_EXTENSION:\r\n                name = (path.split('.'))[0];\r\n                break;\r\n\r\n            case eImageNameType.ORIGINAL:\r\n                name = path;\r\n                break;\r\n        }\r\n\r\n        return name;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    protected translateElementName(elementName: string): string {\r\n        if (this._minimized) {\r\n            if (this._minDefs[\"name\"] !== elementName) {\r\n                console.warn(\"current definition is \" + this._minDefs[\"name\"]);\r\n                return elementName;\r\n            }\r\n\r\n            if (this._minDefs[\"minName\"] !== null) {\r\n                elementName = this._minDefs[\"minName\"];\r\n            }\r\n        }\r\n\r\n        return elementName;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    protected translateChildElementName(elementName: string): string {\r\n        if (this._minimized && this._minDefs !== null) {\r\n            var elements = this._minDefs[\"childElements\"];\r\n            if (elements !== null) {\r\n                elementName = elements[elementName] === null ? elementName : elements[elementName][\"minName\"];\r\n            }\r\n        }\r\n        return elementName;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    protected translateAttributeName(attributeName: string): string {\r\n        if (this._minimized && this._minDefs !== null) {\r\n            var attributes = this._minDefs[\"attributes\"];\r\n            if (attributes !== null) {\r\n                attributeName = attributes[attributeName] === null ? attributeName : attributes[attributeName];\r\n            }\r\n        }\r\n        return attributeName;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    protected setMinDefsToElementName(tagName: string): void {\r\n        if (this._minimized) {\r\n            // save current level of min defs\r\n            this._minDefsStack.push(this._minDefs);\r\n            // get child definition and set it as current\r\n            var minDef = this._minDefs[\"childElements\"][tagName];\r\n            this._minDefs = minDef;\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    protected popMinDefsStack(): void {\r\n        if (this._minimized) {\r\n            this._minDefs = this._minDefsStack.pop();\r\n        }\r\n    }\r\n}\r\n","import { Spriter }                              from \"../Spriter\";\r\nimport { Animation, eAnimationLooping }         from \"../Structure/Animation\";\r\nimport { Baseline }                             from \"../Structure/Baseline\";\r\nimport { CharMap }                              from \"../Structure/CharMap\";\r\nimport { Entity }                               from \"../Structure/Entity\";\r\nimport { File }                                 from \"../Structure/File\";\r\nimport { Folder }                               from \"../Structure/Folder\";\r\nimport { Item }                                 from \"../Structure/Item\";\r\nimport { Key }                                  from \"../Structure/Key\";\r\nimport { KeyBone }                              from \"../Structure/KeyBone\";\r\nimport { KeyMainline }                          from \"../Structure/KeyMainline\";\r\nimport { KeyObject }                            from \"../Structure/KeyObject\";\r\nimport { KeyTag }                               from \"../Structure/KeyTag\";\r\nimport { KeyTimeline }                          from \"../Structure/KeyTimeline\";\r\nimport { KeyVariable }                          from \"../Structure/KeyVariable\";\r\nimport { ObjectInfo }                           from \"../Structure/ObjectInfo\";\r\nimport { Ref }                                  from \"../Structure/Ref\";\r\nimport { Timeline }                             from \"../Structure/Timeline\";\r\nimport { eVariableType, Types }                 from \"../Structure/Types\";\r\nimport { Variable }                             from \"../Structure/Variable\";\r\nimport { Varline }                              from \"../Structure/Varline\";\r\nimport { ISpriterNodeList }                     from \"./ISpriterNodeList\";\r\nimport { NodeListJSON }                         from \"./NodeListJSON\";\r\nimport { eFileType, IFileOptions, SpriterFile } from \"./SpriterFile\";\r\n\r\nexport class SpriterJSON extends SpriterFile {\r\n\r\n    private _json: any;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor(JSONData: any, options?: IFileOptions) {\r\n        super(options);\r\n\r\n        this._json = JSONData;\r\n\r\n        var minimized = JSONData[\"min\"] !== undefined;\r\n        this.setMinimized(minimized);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getType(): eFileType {\r\n        return eFileType.JSON;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private parseInt(element: any, attributeName: string, defaultValue: number = 0): number {\r\n        var value = element[this.translateAttributeName(attributeName)];\r\n        if (value === undefined) {\r\n            return defaultValue;\r\n        }\r\n\r\n        return typeof (value) === \"number\" ? value : parseInt(value);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    protected parseFloat(element: any, attributeName: string, defaultValue: number = 0): number {\r\n        var value = element[this.translateAttributeName(attributeName)];\r\n        if (value === undefined) {\r\n            return defaultValue;\r\n        }\r\n\r\n        return typeof (value) === \"number\" ? value : parseFloat(value);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    protected parseBoolean(element: any, attributeName: string, defaultValue: boolean = false): boolean {\r\n        var value = element[this.translateAttributeName(attributeName)];\r\n        if (value === undefined) {\r\n            return defaultValue;\r\n        }\r\n\r\n        return typeof (value) === \"boolean\" ? value : (value === \"true\");\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    protected parseString(element: any, attributeName: string, defaultValue: string = \"\"): string {\r\n        var value = element[this.translateAttributeName(attributeName)];\r\n        return value === undefined ? defaultValue : value;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getNodes(nodeName: string): ISpriterNodeList {\r\n        this.setMinDefsToElementName(nodeName);\r\n        var translatedName = this.translateElementName(nodeName);\r\n\r\n        return new NodeListJSON(this, (this._json[translatedName] !== undefined) ? this._json[translatedName] : []);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getNodesForElement(element: any, nodeName: string): ISpriterNodeList {\r\n        this.setMinDefsToElementName(nodeName);\r\n        var translatedName = this.translateElementName(nodeName);\r\n\r\n        return new NodeListJSON(this, (element[translatedName] !== undefined) ? element[translatedName] : []);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getFolder(element: any): Folder {\r\n        return new Folder(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getFile(element: any): File {\r\n        if (element[\"type\"] !== undefined && element[\"type\"] === \"sound\") {\r\n            return null;\r\n        }\r\n\r\n        return new File(\r\n            this.parseInt(element, \"id\"),\r\n            this.getFileName(this.parseString(element, \"name\")),\r\n            this.parseFloat(element, \"pivot_x\"),\r\n            1 - this.parseFloat(element, \"pivot_y\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTag(element: number): Item {\r\n        return new Item(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getEntity(element: any): Entity {\r\n        return new Entity(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getObjectInfo(element: any, index: number): ObjectInfo {\r\n        return new ObjectInfo(\r\n            index,\r\n            this.parseString(element, \"name\"),\r\n            Types.getObjectTypeForName(this.parseString(element, \"type\")),\r\n            this.parseFloat(element, \"w\"),\r\n            this.parseFloat(element, \"h\"),\r\n            this.parseFloat(element, \"pivot_x\"),\r\n            this.parseFloat(element, \"pivot_y\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getCharMap(element: any): CharMap {\r\n        return new CharMap(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getCharMapEntry(element: any, charMap: CharMap, spriter: Spriter): void {\r\n        var sourceName = spriter.getFolderById(this.parseInt(element, \"folder\")).\r\n            getFileById(this.parseInt(element, \"file\")).name;\r\n\r\n        var target: File = null;\r\n        if (element[\"target_folder\"] !== undefined && element[\"target_file\"] !== undefined) {\r\n            target = spriter.getFolderById(this.parseInt(element, \"target_folder\")).\r\n                getFileById(this.parseInt(element, \"target_file\"));\r\n        }\r\n\r\n        charMap.put(sourceName, target);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVariable(element: any): Variable {\r\n        var type = Types.getVariableTypeForName(this.parseString(element, \"type\"));\r\n        return new Variable(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\"),\r\n            type,\r\n            (type === eVariableType.STRING) ? this.parseString(element, \"default\") : this.parseFloat(element, \"default\", 0)\r\n        );\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getAnimation(element: any): Animation {\r\n        return new Animation(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\"),\r\n            this.parseFloat(element, \"length\"),\r\n            this.parseBoolean(element, \"looping\", true) === true ? eAnimationLooping.LOOPING : eAnimationLooping.NO_LOOPING\r\n        );\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getMainlineKey(element: any): KeyMainline {\r\n        return new KeyMainline(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseFloat(element, \"time\")\r\n        );\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getRef(element: any): Ref {\r\n        return new Ref(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseInt(element, \"parent\", -1),\r\n            this.parseInt(element, \"timeline\"),\r\n            this.parseInt(element, \"key\"),\r\n            this.parseInt(element, \"z_index\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTimeline(element: any): Timeline {\r\n        return new Timeline(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\"),\r\n            Types.getObjectTypeForName(this.parseString(element, \"object_type\", \"sprite\")),\r\n            this.parseInt(element, \"obj\", -1));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getBaseline(element: any): Baseline {\r\n        return new Baseline(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\", null));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVarline(element: any): Varline {\r\n        return new Varline(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseInt(element, \"def\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getKey(element: any): Key {\r\n        return new Key(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseInt(element, \"time\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTagKey(element: any): KeyTag {\r\n        return new KeyTag(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseInt(element, \"time\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVariableKey(element: any, type: eVariableType): KeyVariable {\r\n        return new KeyVariable(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseInt(element, \"time\"),\r\n            (type === eVariableType.STRING) ? this.parseString(element, \"val\") : this.parseFloat(element, \"val\")\r\n        );\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTimelineKey(element: any, index: number, spriter: Spriter): KeyTimeline {\r\n        var time = this.parseInt(element, \"time\");\r\n        var spin = this.parseInt(element, \"spin\", 1);\r\n\r\n        // curve and params\r\n        var curve = this.parseString(element, \"curve_type\", \"linear\");\r\n        var c1 = this.parseFloat(element, \"c1\", 0);\r\n        var c2 = this.parseFloat(element, \"c2\", 0);\r\n        var c3 = this.parseFloat(element, \"c3\", 0);\r\n        var c4 = this.parseFloat(element, \"c4\", 0);\r\n\r\n        // sprite or bone key?\r\n        var boneTag = this.translateChildElementName(\"bone\");\r\n        var objectTag = this.translateChildElementName(\"object\");\r\n\r\n        var key: KeyTimeline = null;\r\n        var keyDataElm = null;\r\n\r\n        var sprite: boolean = false;\r\n\r\n        if (element[boneTag] !== undefined) {\r\n            keyDataElm = element[boneTag];\r\n            key = new KeyBone(index, time, spin);\r\n            this.setMinDefsToElementName(\"bone\");\r\n        } else if (element[objectTag] !== undefined) {\r\n            keyDataElm = element[objectTag];\r\n            key = new KeyObject(index, time, spin);\r\n            this.setMinDefsToElementName(\"object\");\r\n            sprite = true;\r\n        }\r\n\r\n        // other curve than linear?\r\n        if (curve !== \"linear\") {\r\n            key.setCurve(Types.getCurveTypeForName(curve), c1, c2, c3, c4);\r\n        }\r\n\r\n        // spatial info\r\n        var info = key.info;\r\n\r\n        info.x = this.parseFloat(keyDataElm, \"x\");\r\n        info.y = -this.parseFloat(keyDataElm, \"y\");\r\n        info.scaleX = this.parseFloat(keyDataElm, \"scale_x\", 1);\r\n        info.scaleY = this.parseFloat(keyDataElm, \"scale_y\", 1);\r\n        info.angle = 360 - this.parseFloat(keyDataElm, \"angle\");\r\n        info.alpha = this.parseFloat(keyDataElm, \"a\", 1);\r\n\r\n        if (sprite) {\r\n            // sprite specific - set file and folder\r\n            var folderId = this.parseInt(keyDataElm, \"folder\");\r\n            var fileId = this.parseInt(keyDataElm, \"file\");\r\n            (<KeyObject>key).setFolderAndFile(folderId, fileId);\r\n            // set pivot in spatial info different from default (based on pivot in file)\r\n            var file = spriter.getFolderById(folderId).getFileById(fileId);\r\n            info.pivotX = this.parseFloat(keyDataElm, \"pivot_x\", file.pivotX);\r\n            // 1 - to flip Y, default anchor is already flipped, so it needs to be flipped back to avoid double flipping\r\n            info.pivotY = 1 - this.parseFloat(keyDataElm, \"pivot_y\", 1 - file.pivotY);\r\n        }\r\n\r\n        this.popMinDefsStack();\r\n\r\n        return key;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTagChange(element: any): number {\r\n        return this.parseInt(element, \"t\");\r\n    }\r\n}\r\n","import { Spriter }                              from \"../Spriter\";\r\nimport { Animation, eAnimationLooping }         from \"../Structure/Animation\";\r\nimport { Baseline }                             from \"../Structure/Baseline\";\r\nimport { CharMap }                              from \"../Structure/CharMap\";\r\nimport { Entity }                               from \"../Structure/Entity\";\r\nimport { File }                                 from \"../Structure/File\";\r\nimport { Folder }                               from \"../Structure/Folder\";\r\nimport { Item }                                 from \"../Structure/Item\";\r\nimport { Key }                                  from \"../Structure/Key\";\r\nimport { KeyBone }                              from \"../Structure/KeyBone\";\r\nimport { KeyMainline }                          from \"../Structure/KeyMainline\";\r\nimport { KeyObject }                            from \"../Structure/KeyObject\";\r\nimport { KeyTag }                               from \"../Structure/KeyTag\";\r\nimport { KeyTimeline }                          from \"../Structure/KeyTimeline\";\r\nimport { KeyVariable }                          from \"../Structure/KeyVariable\";\r\nimport { ObjectInfo }                           from \"../Structure/ObjectInfo\";\r\nimport { Ref }                                  from \"../Structure/Ref\";\r\nimport { Timeline }                             from \"../Structure/Timeline\";\r\nimport { eVariableType, Types }                 from \"../Structure/Types\";\r\nimport { Variable }                             from \"../Structure/Variable\";\r\nimport { Varline }                              from \"../Structure/Varline\";\r\nimport { ISpriterNodeList }                     from \"./ISpriterNodeList\";\r\nimport { NodeListXml }                          from \"./NodeListXml\";\r\nimport { eFileType, IFileOptions, SpriterFile } from \"./SpriterFile\";\r\n\r\nexport class SpriterXml extends SpriterFile {\r\n\r\n    private _xml: XMLDocument;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor(xmlData: XMLDocument, options?: IFileOptions) {\r\n        super(options);\r\n\r\n        this._xml = xmlData;\r\n\r\n        var minimized = xmlData.documentElement.hasAttribute(\"min\");\r\n        this.setMinimized(minimized);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getType(): eFileType {\r\n        return eFileType.XML;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private parseInt(element: Element, attributeName: string, defaultValue: number = 0): number {\r\n        var value = element.getAttribute(this.translateAttributeName(attributeName));\r\n        return value !== null ? parseInt(value) : defaultValue;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    protected parseFloat(element: Element, attributeName: string, defaultValue: number = 0): number {\r\n        var value = element.getAttribute(this.translateAttributeName(attributeName));\r\n        return value !== null ? parseFloat(value) : defaultValue;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    protected parseString(element: Element, attributeName: string, defaultValue: string = \"\"): string {\r\n        var value = element.getAttribute(this.translateAttributeName(attributeName));\r\n        return value !== null ? value : defaultValue;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getNodes(nodeName: string): ISpriterNodeList {\r\n        this.setMinDefsToElementName(nodeName);\r\n        var translatedName = this.translateElementName(nodeName);\r\n\r\n        return new NodeListXml(this, this._xml.documentElement.getElementsByTagName(translatedName));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getNodesForElement(element: Element, nodeName: string): ISpriterNodeList {\r\n        this.setMinDefsToElementName(nodeName);\r\n        var translatedName = this.translateElementName(nodeName);\r\n\r\n        return new NodeListXml(this, element.getElementsByTagName(translatedName));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getFolder(element: Element): Folder {\r\n        return new Folder(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getFile(element: Element): File {\r\n        if (element.hasAttribute(\"type\") && element.getAttribute(\"type\") === \"sound\") {\r\n            return null;\r\n        }\r\n\r\n        return new File(\r\n            this.parseInt(element, \"id\"),\r\n            this.getFileName(this.parseString(element, \"name\")),\r\n            this.parseFloat(element, \"pivot_x\"),\r\n            1 - this.parseFloat(element, \"pivot_y\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTag(element: Element): Item {\r\n        return new Item(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getEntity(element: Element): Entity {\r\n        return new Entity(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getObjectInfo(element: Element, index: number): ObjectInfo {\r\n        return new ObjectInfo(\r\n            index,\r\n            this.parseString(element, \"name\"),\r\n            Types.getObjectTypeForName(this.parseString(element, \"type\")),\r\n            this.parseFloat(element, \"w\"),\r\n            this.parseFloat(element, \"h\"),\r\n            this.parseFloat(element, \"pivot_x\"),\r\n            this.parseFloat(element, \"pivot_y\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getCharMap(element: Element): CharMap {\r\n        return new CharMap(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getCharMapEntry(element: Element, charMap: CharMap, spriter: Spriter): void {\r\n        var sourceName = spriter.getFolderById(this.parseInt(element, \"folder\")).\r\n            getFileById(this.parseInt(element, \"file\")).name;\r\n\r\n        var target: File = null;\r\n        if (element.hasAttribute(\"target_folder\") && element.hasAttribute(\"target_file\")) {\r\n            target = spriter.getFolderById(this.parseInt(element, \"target_folder\")).\r\n                getFileById(this.parseInt(element, \"target_file\"));\r\n        }\r\n\r\n        charMap.put(sourceName, target);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVariable(element: Element): Variable {\r\n        var type = Types.getVariableTypeForName(this.parseString(element, \"type\"));\r\n        return new Variable(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\"),\r\n            type,\r\n            (type === eVariableType.STRING) ? this.parseString(element, \"default\") : this.parseFloat(element, \"default\", 0)\r\n        );\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getAnimation(element: Element): Animation {\r\n        return new Animation(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\"),\r\n            this.parseFloat(element, \"length\"),\r\n            this.parseString(element, \"looping\", \"true\") === \"true\" ? eAnimationLooping.LOOPING : eAnimationLooping.NO_LOOPING\r\n        );\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getMainlineKey(element: Element): KeyMainline {\r\n        return new KeyMainline(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseFloat(element, \"time\")\r\n        );\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getRef(element: Element): Ref {\r\n        return new Ref(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseInt(element, \"parent\", -1),\r\n            this.parseInt(element, \"timeline\"),\r\n            this.parseInt(element, \"key\"),\r\n            this.parseInt(element, \"z_index\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTimeline(element: Element): Timeline {\r\n        return new Timeline(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\"),\r\n            Types.getObjectTypeForName(this.parseString(element, \"object_type\", \"sprite\")),\r\n            this.parseInt(element, \"obj\", -1));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getBaseline(element: Element): Baseline {\r\n        return new Baseline(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseString(element, \"name\", null));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVarline(element: Element): Varline {\r\n        return new Varline(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseInt(element, \"def\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getKey(element: Element): Key {\r\n        return new Key(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseInt(element, \"time\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTagKey(element: Element): KeyTag {\r\n        return new KeyTag(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseInt(element, \"time\"));\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVariableKey(element: Element, type: eVariableType): KeyVariable {\r\n        return new KeyVariable(\r\n            this.parseInt(element, \"id\"),\r\n            this.parseInt(element, \"time\"),\r\n            (type === eVariableType.STRING) ? this.parseString(element, \"val\") : this.parseFloat(element, \"val\")\r\n        );\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTimelineKey(element: Element, index: number, spriter: Spriter): KeyTimeline {\r\n        var time = this.parseInt(element, \"time\");\r\n        var spin = this.parseInt(element, \"spin\", 1);\r\n\r\n        // curve and params\r\n        var curve = this.parseString(element, \"curve_type\", \"linear\");\r\n        var c1 = this.parseFloat(element, \"c1\", 0);\r\n        var c2 = this.parseFloat(element, \"c2\", 0);\r\n        var c3 = this.parseFloat(element, \"c3\", 0);\r\n        var c4 = this.parseFloat(element, \"c4\", 0);\r\n\r\n        // sprite or bone key?\r\n        var boneTag = this.translateChildElementName(\"bone\");\r\n        var objectTag = this.translateChildElementName(\"object\");\r\n\r\n        var key: KeyTimeline = null;\r\n        var keyDataElm = <Element>(element.firstElementChild);\r\n\r\n        var sprite: boolean = false;\r\n\r\n        if (keyDataElm.tagName === boneTag) {\r\n            key = new KeyBone(index, time, spin);\r\n            this.setMinDefsToElementName(\"bone\");\r\n        } else if (keyDataElm.tagName === objectTag) {\r\n            this.setMinDefsToElementName(\"object\");\r\n            key = new KeyObject(index, time, spin);\r\n            sprite = true;\r\n        }\r\n\r\n        // other curve than linear?\r\n        if (curve !== \"linear\") {\r\n            key.setCurve(Types.getCurveTypeForName(curve), c1, c2, c3, c4);\r\n        }\r\n\r\n        // spatial info\r\n        var info = key.info;\r\n\r\n        info.x = this.parseFloat(keyDataElm, \"x\");\r\n        info.y = -this.parseFloat(keyDataElm, \"y\");\r\n        info.scaleX = this.parseFloat(keyDataElm, \"scale_x\", 1);\r\n        info.scaleY = this.parseFloat(keyDataElm, \"scale_y\", 1);\r\n        info.angle = 360 - this.parseFloat(keyDataElm, \"angle\");\r\n        info.alpha = this.parseFloat(keyDataElm, \"a\", 1);\r\n\r\n        if (sprite) {\r\n            // sprite specific - set file and folder\r\n            var folderId = this.parseInt(keyDataElm, \"folder\");\r\n            var fileId = this.parseInt(keyDataElm, \"file\");\r\n            (<KeyObject>key).setFolderAndFile(folderId, fileId);\r\n            // set pivot in spatial info different from default (based on pivot in file)\r\n            var file = spriter.getFolderById(folderId).getFileById(fileId);\r\n            info.pivotX = this.parseFloat(keyDataElm, \"pivot_x\", file.pivotX);\r\n            // 1 - to flip Y, default anchor is already flipped, so it needs to be flipped back to avoid double flipping\r\n            info.pivotY = 1 - this.parseFloat(keyDataElm, \"pivot_y\", 1 - file.pivotY);\r\n        }\r\n\r\n        this.popMinDefsStack();\r\n\r\n        return key;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTagChange(element: Element): number {\r\n        return this.parseInt(element, \"t\");\r\n    }\r\n}\r\n","// -------------------------------------------------------------------------\r\nexport function linear(a: number, b: number, t: number): number {\r\n    return ((b - a) * t) + a;\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\nexport function quadratic(a: number, b: number, c: number, t: number) {\r\n    return linear(linear(a, b, t), linear(b, c, t), t);\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\nexport function cubic(a: number, b: number, c: number, d: number, t: number) {\r\n    return linear(quadratic(a, b, c, t), quadratic(b, c, d, t), t);\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\nexport function quartic(a: number, b: number, c: number, d: number, e: number, t: number) {\r\n    return linear(cubic(a, b, c, d, t), cubic(b, c, d, e, t), t);\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\nexport function quintic(a: number, b: number, c: number, d: number, e: number, f: number, t: number) {\r\n    return linear(quartic(a, b, c, d, e, t), quartic(b, c, d, e, f, t), t);\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\n// B(t) = (1 − t)^3 * P0 + 3(1 − t)^2 * t * P1 + 3(1 − t) *  t^2 * P2 + t^3 * P3  , 0 ≤ t ≤ 1.\r\nfunction bezierCoord(p1: number, p2: number, t: number): number {\r\n    // p0 = 0, p3 = 1\r\n    var p0 = 0;\r\n    var p3 = 1;\r\n\r\n    var u = 1 - t;\r\n    var t2 = t * t;\r\n    var u2 = u * u;\r\n    var u3 = u2 * u;\r\n    var t3 = t2 * t;\r\n\r\n    return /*u3 * p0*/ 0 + 3 * u2 * t * p1 + 3 * u * t2 * p2 + t3 * p3;\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\nexport function bezier(p1x: number, p1y: number, p2x: number, p2y: number, t: number): number {\r\n    var epsilon = 0.001;\r\n    var maxIterations = 10;\r\n\r\n    // binary search\r\n\r\n    //establish bounds\r\n    var lower = 0;\r\n    var upper = 1;\r\n    var percent = (upper + lower) / 2;\r\n\r\n    //initial x\r\n    var x = bezierCoord(p1x, p2x, percent);\r\n\r\n    //loop until returned x - t is less than epsilon\r\n    var iterations = 0;\r\n    while (Math.abs(t - x) > epsilon && iterations < maxIterations) {\r\n        if (t > x) {\r\n            lower = percent;\r\n        } else {\r\n            upper = percent;\r\n        }\r\n\r\n        percent = (upper + lower) / 2;\r\n        x = bezierCoord(p1x, p2x, percent);\r\n\r\n        ++iterations;\r\n    }\r\n\r\n    //we're within tolerance of the desired x value. Return the y value.\r\n    return bezierCoord(p1y, p2y, percent);\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\nexport function angleLinear(angleA: number, angleB: number, spin: number, t: number): number {\r\n    // no spin\r\n    if (spin === 0) {\r\n        return angleA;\r\n    }\r\n\r\n    // spin left\r\n    if (spin > 0) {\r\n        if (angleB > angleA) {\r\n            angleB -= 360;\r\n        }\r\n    } else {    // spin right\r\n        if (angleB < angleA) {\r\n            angleB += 360;\r\n        }\r\n    }\r\n\r\n    return linear(angleA, angleB, t);\r\n}\r\n","import { IdNameMap } from \"./IdNameMap\";\r\nimport { Folder }    from \"./Structure/Folder\";\r\nimport { Item }      from \"./Structure/Item\";\r\nimport { Entity }    from \"./Structure/Entity\";\r\n\r\nexport class Spriter {\r\n\r\n    private _folders: IdNameMap<Folder>;\r\n    private _tags: IdNameMap<Item>;\r\n    private _entities: IdNameMap<Entity>;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor() {\r\n        this._folders = new IdNameMap<Folder>();\r\n        this._tags = new IdNameMap<Item>();\r\n        this._entities = new IdNameMap<Entity>();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public addFolder(folder: Folder): void {\r\n        this._folders.add(folder, folder.id, folder.name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getFolderById(id: number): Folder {\r\n        return this._folders.getById(id);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getFolderByName(name: string): Folder {\r\n        return this._folders.getByName(name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public addEntity(entity: Entity): void {\r\n        this._entities.add(entity, entity.id, entity.name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getEntityById(id: number): Entity {\r\n        return this._entities.getById(id);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getEntityByName(name: string): Entity {\r\n        return this._entities.getByName(name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public addTag(tag: Item): void {\r\n        this._tags.add(tag, tag.id, tag.name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTagById(id: number): Item {\r\n        return this._tags.getById(id);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTagByName(name: string): Item {\r\n        return this._tags.getByName(name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get tagsLength(): number {\r\n        return this._tags.length;\r\n    }\r\n}\r\n","import { angleLinear, bezier, cubic, linear, quadratic, quartic, quintic } from \"./Math\";\r\nimport { Animation, eAnimationLooping } from \"./Structure/Animation\";\r\nimport { Entity }                       from \"./Structure/Entity\";\r\nimport { KeyTimeline }                  from \"./Structure/KeyTimeline\";\r\nimport { ObjectInfo }                   from \"./Structure/ObjectInfo\";\r\nimport { SpatialInfo }                  from \"./Structure/SpatialInfo\";\r\nimport { eCurveType, eObjectType }      from \"./Structure/Types\";\r\n\r\nexport class SpriterBone {\r\n\r\n    public static UPDATE_X = 1;\r\n    public static UPDATE_Y = 2;\r\n    public static UPDATE_SCALE_X = 4;\r\n    public static UPDATE_SCALE_Y = 8;\r\n    public static UPDATE_PIVOT_X = 16;\r\n    public static UPDATE_PIVOT_Y = 32;\r\n    public static UPDATE_ANGLE = 64;\r\n    public static UPDATE_ALPHA = 128;\r\n\r\n    private _on: boolean;\r\n\r\n    public name: string;\r\n    public objectInfo: ObjectInfo;\r\n\r\n    public parent: number;\r\n\r\n    public timeline: number = -1;\r\n    public timelineKey: number = -1;\r\n    public key: KeyTimeline;\r\n\r\n    public timeFrom: number;\r\n    public timeTo: number;\r\n    public from: SpatialInfo;\r\n    public to: SpatialInfo;\r\n\r\n    public transformed: SpatialInfo;\r\n\r\n    public updateMask: number;\r\n\r\n    public type: eObjectType;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor() {\r\n        this.transformed = new SpatialInfo();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public setOn(on: boolean): void {\r\n        this._on = on;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get on(): boolean {\r\n        return this._on;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public setKey(entity: Entity, animation: Animation, timelineId: number, keyId: number): void {\r\n        this.timeline = timelineId;\r\n        this.timelineKey = keyId;\r\n\r\n        var timeline = animation.getTimelineById(timelineId);\r\n        this.name = timeline.name;\r\n        this.objectInfo = (timeline.objectRef === -1) ? null : entity.getObjectInfoById(timeline.objectRef);\r\n\r\n        var keyFrom = <KeyTimeline>timeline.at(keyId);\r\n        // in the end loop to first key. If animation is not looping, then repeat last key\r\n        var keyTo = <KeyTimeline>(timeline.at(keyId + 1, animation.loopType !== eAnimationLooping.NO_LOOPING));\r\n\r\n        this.key = keyFrom;\r\n        this.timeFrom = keyFrom.time;\r\n        this.timeTo = keyTo.time;\r\n\r\n        // if loop to key 0\r\n        if (this.timeTo < this.timeFrom) {\r\n            this.timeTo = animation.length;\r\n        }\r\n\r\n        this.from = keyFrom.info;\r\n        this.to = keyTo.info;\r\n\r\n        // create update mask\r\n        this.updateMask = 0;\r\n        if (Math.abs(this.from.x - this.to.x) > 0.001) {\r\n            this.updateMask += SpriterBone.UPDATE_X;\r\n        }\r\n        if (Math.abs(this.from.y - this.to.y) > 0.001) {\r\n            this.updateMask += SpriterBone.UPDATE_Y;\r\n        }\r\n        if (Math.abs(this.from.scaleX - this.to.scaleX) > 0.001) {\r\n            this.updateMask += SpriterBone.UPDATE_SCALE_X;\r\n        }\r\n        if (Math.abs(this.from.scaleY - this.to.scaleY) > 0.001) {\r\n            this.updateMask += SpriterBone.UPDATE_SCALE_Y;\r\n        }\r\n        if (Math.abs(this.from.pivotX - this.to.pivotX) > 0.001) {\r\n            this.updateMask += SpriterBone.UPDATE_PIVOT_X;\r\n        }\r\n        if (Math.abs(this.from.pivotY - this.to.pivotY) > 0.001) {\r\n            this.updateMask += SpriterBone.UPDATE_PIVOT_Y;\r\n        }\r\n        if (Math.abs(this.from.alpha - this.to.alpha) > 0.001) {\r\n            this.updateMask += SpriterBone.UPDATE_ALPHA;\r\n        }\r\n        if (Math.abs(this.from.angle - this.to.angle) > 0.001) {\r\n            this.updateMask += SpriterBone.UPDATE_ANGLE;\r\n        }\r\n\r\n        // init data\r\n        this.transformed.x = this.from.x;\r\n        this.transformed.y = this.from.y;\r\n        this.transformed.scaleX = this.from.scaleX;\r\n        this.transformed.scaleY = this.from.scaleY;\r\n        this.transformed.pivotX = this.from.pivotX;\r\n        this.transformed.pivotY = this.from.pivotY;\r\n        this.transformed.angle = this.from.angle;\r\n        this.transformed.alpha = this.from.alpha;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public tween(time: number): void {\r\n        // calculate normalized time\r\n        //var t = Phaser.Math.clamp((time - this.timeFrom) / (this.timeTo - this.timeFrom), 0, 1);\r\n        var t = (this.updateMask > 0) ? this.getTweenTime(time) : 0;\r\n\r\n        this.transformed.x = (this.updateMask & SpriterBone.UPDATE_X) > 0 ?\r\n            linear(this.from.x, this.to.x, t) : this.from.x;\r\n        this.transformed.y = (this.updateMask & SpriterBone.UPDATE_Y) > 0 ?\r\n            linear(this.from.y, this.to.y, t) : this.from.y;\r\n\r\n        this.transformed.scaleX = (this.updateMask & SpriterBone.UPDATE_SCALE_X) > 0 ?\r\n            linear(this.from.scaleX, this.to.scaleX, t) : this.from.scaleX;\r\n        this.transformed.scaleY = (this.updateMask & SpriterBone.UPDATE_SCALE_Y) > 0 ?\r\n            linear(this.from.scaleY, this.to.scaleY, t) : this.from.scaleY;\r\n\r\n        this.transformed.pivotX = (this.updateMask & SpriterBone.UPDATE_PIVOT_X) > 0 ?\r\n            linear(this.from.pivotX, this.to.pivotX, t) : this.from.pivotX;\r\n        this.transformed.pivotY = (this.updateMask & SpriterBone.UPDATE_PIVOT_Y) > 0 ?\r\n            linear(this.from.pivotY, this.to.pivotY, t) : this.from.pivotY;\r\n\r\n        this.transformed.alpha = (this.updateMask & SpriterBone.UPDATE_ALPHA) > 0 ?\r\n            linear(this.from.alpha, this.to.alpha, t) : this.from.alpha;\r\n\r\n        this.transformed.angle = (this.updateMask & SpriterBone.UPDATE_ANGLE) > 0 ?\r\n            angleLinear(this.from.angle, this.to.angle, this.key.spin, t) : this.from.angle;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public update(parent: SpatialInfo): void {\r\n        this.transformed.angle *= Phaser.Math.sign(parent.scaleX) * Phaser.Math.sign(parent.scaleY);\r\n        this.transformed.angle += parent.angle;\r\n\r\n        this.transformed.scaleX *= parent.scaleX;\r\n        this.transformed.scaleY *= parent.scaleY;\r\n\r\n        this.scalePosition(parent.scaleX, parent.scaleY);\r\n        this.rotatePosition(parent.angle);\r\n        this.translatePosition(parent.x, parent.y);\r\n\r\n        this.transformed.alpha *= parent.alpha;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private scalePosition(parentScaleX: number, parentScaleY: number): void {\r\n        this.transformed.x *= parentScaleX;\r\n        this.transformed.y *= parentScaleY;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private rotatePosition(parentAngle: number): void {\r\n        var x = this.transformed.x;\r\n        var y = this.transformed.y\r\n\r\n        if (x !== 0 || y !== 0) {\r\n            var rads = parentAngle * (Math.PI / 180);\r\n\r\n            var cos = Math.cos(rads);\r\n            var sin = Math.sin(rads);\r\n\r\n            this.transformed.x = x * cos - y * sin;\r\n            this.transformed.y = x * sin + y * cos;\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private translatePosition(parentX: number, parentY: number): void {\r\n        this.transformed.x += parentX;\r\n        this.transformed.y += parentY;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private getTweenTime(time: number): number {\r\n        if (this.key.curveType === eCurveType.INSTANT) {\r\n            return 0;\r\n        }\r\n\r\n        var t = Phaser.Math.clamp((time - this.timeFrom) / (this.timeTo - this.timeFrom), 0, 1);\r\n\r\n        switch (this.key.curveType) {\r\n            case eCurveType.LINEAR:\r\n                return t;\r\n\r\n            case eCurveType.QUADRATIC:\r\n                return quadratic(0, this.key.c1, 1, t);\r\n\r\n            case eCurveType.CUBIC:\r\n                return cubic(0, this.key.c1, this.key.c2, 1, t);\r\n\r\n            case eCurveType.QUARTIC:\r\n                return quartic(0, this.key.c1, this.key.c2, this.key.c3, 1, t);\r\n\r\n            case eCurveType.QUINTIC:\r\n                return quintic(0, this.key.c1, this.key.c2, this.key.c3, this.key.c4, 1, t);\r\n\r\n            case eCurveType.BEZIER:\r\n                return bezier(this.key.c1, this.key.c2, this.key.c3, this.key.c4, t);\r\n        }\r\n\r\n        return 0;\r\n    }\r\n}\r\n","import { LineStepper }                  from \"./LineStepper\";\r\nimport { Spriter }                      from \"./Spriter\";\r\nimport { SpriterBone }                  from \"./SpriterBone\";\r\nimport { SpriterObject }                from \"./SpriterObject\";\r\nimport { Animation, eAnimationLooping } from \"./Structure/Animation\";\r\nimport { eTimelineType }                from \"./Structure/Baseline\";\r\nimport { CharMapStack }                 from \"./Structure/CharMapStack\";\r\nimport { Entity }                       from \"./Structure/Entity\";\r\nimport { Key }                          from \"./Structure/Key\";\r\nimport { KeyMainline }                  from \"./Structure/KeyMainline\";\r\nimport { KeyTag }                       from \"./Structure/KeyTag\";\r\nimport { KeyVariable }                  from \"./Structure/KeyVariable\";\r\nimport { Ref }                          from \"./Structure/Ref\";\r\nimport { SpatialInfo }                  from \"./Structure/SpatialInfo\";\r\nimport { eObjectType }                  from \"./Structure/Types\";\r\nimport { Variable }                     from \"./Structure/Variable\";\r\nimport { Varline }                      from \"./Structure/Varline\";\r\n\r\nexport class SpriterGroup extends Phaser.Group {\r\n\r\n    // onLoop(SpriterGroup);\r\n    public onLoop: Phaser.Signal = new Phaser.Signal();\r\n    // onFinish(SpriterGroup);\r\n    public onFinish: Phaser.Signal = new Phaser.Signal();\r\n\r\n    // onSound(SpriterGroup, string); // string for line name which equals soud name without extension\r\n    public onSound: Phaser.Signal = new Phaser.Signal();\r\n    // onEvent(SpriterGroup, string); // string for line name which equals event name\r\n    public onEvent: Phaser.Signal = new Phaser.Signal();\r\n    // onTagChange(SpriterGroup, string, boolean); // string for tag name, boolean for change (true = set / false = unset)\r\n    public onTagChange: Phaser.Signal = new Phaser.Signal();\r\n    // onVariableSet(SpriterGroup, Variable); // Variable is Spriter variable def with access to value\r\n    public onVariableSet: Phaser.Signal = new Phaser.Signal();\r\n    // onBoxUpdated(SpriterGroup, SpriterObject);\r\n    public onBoxUpdated: Phaser.Signal = new Phaser.Signal();\r\n    // onPointUpdated(SpriterGroup, SpriterObject);\r\n    public onPointUpdated: Phaser.Signal = new Phaser.Signal();\r\n\r\n    private _spriter: Spriter;\r\n    private _textureKey: string;\r\n\r\n    private _entity: Entity;\r\n    private _entityName: string;\r\n    private _animation: Animation;\r\n    private _animationName: string;\r\n    private _animationSpeed: number;\r\n\r\n    private _mainlineStepper: LineStepper = new LineStepper();\r\n    private _lineSteppers: LineStepper[] = [];\r\n    private _lineSteppersCount: number = 0;\r\n\r\n    private _bones: SpriterBone[] = [];\r\n    private _objects: SpriterObject[] = [];\r\n    private _tags: number = 0;  // up to 32 tags - 1 per bit\r\n    private _vars: Variable[] = [];\r\n\r\n    private _charMapStack: CharMapStack;\r\n\r\n    private _time: number;\r\n\r\n    private _root: SpatialInfo;\r\n\r\n    private _paused: boolean = false;\r\n    private _finished: boolean;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor(game: Phaser.Game, spriter: Spriter, texutreKey: string, entityName: string,\r\n        animation?: string | number, animationSpeedPercent?: number) {\r\n\r\n        super(game, null);\r\n\r\n        this._spriter = spriter;\r\n        this._entityName = entityName;\r\n        this._entity = spriter.getEntityByName(entityName);\r\n        this._textureKey = texutreKey;\r\n\r\n        this._root = new SpatialInfo();\r\n\r\n        // clone variables\r\n        for (var i = 0; i < this._entity.variablesLength; i++) {\r\n            this._vars[i] = this._entity.getVariableById(i).clone();\r\n        }\r\n\r\n        // create charmap stack\r\n        this._charMapStack = new CharMapStack(this._entity);\r\n\r\n        // set animation speed\r\n        if (animationSpeedPercent === undefined) {\r\n            animationSpeedPercent = 100;\r\n        }\r\n\r\n        this.setAnimationSpeedPercent(animationSpeedPercent);\r\n\r\n        // set animation\r\n        if (animation === undefined || animation === null) {\r\n            // set first animation\r\n            this.playAnimationById(0);\r\n        } else if (typeof animation === \"number\") {\r\n            this.playAnimationById(animation);\r\n        } else {\r\n            this.playAnimationByName(animation);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get spriter(): Spriter {\r\n        return this._spriter;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get entity(): Entity {\r\n        return this._entity;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get charMapStack(): CharMapStack {\r\n        return this._charMapStack;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get paused(): boolean {\r\n        return this._paused;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public set paused(paused: boolean) {\r\n        this._paused = paused;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get animationsCount(): number {\r\n        return this._entity.animationsLength;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get currentAnimationName(): string {\r\n        return this._animationName;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public pushCharMap(charMapName: string): void {\r\n        this._charMapStack.push(charMapName);\r\n        this.resetSprites();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public removeCharMap(charMapName: string): void {\r\n        this._charMapStack.remove(charMapName);\r\n        this.resetSprites();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public clearCharMaps(): void {\r\n        this._charMapStack.reset();\r\n        this.resetSprites();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private resetSprites(): void {\r\n        for (var i = 0; i < this._objects.length; i++) {\r\n            this._objects[i].resetFile();\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public isTagOn(tagName: string): boolean {\r\n        return this.isTagOnById(this._spriter.getTagByName(tagName).id);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public isTagOnById(tagId: number): boolean {\r\n        return (this._tags & (1 << tagId)) > 0;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVariable(varName: string): Variable {\r\n        return this.getVariableById(this._entity.getVariableByName(varName).id);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVariableById(varId: number): Variable {\r\n        return this._vars[varId];\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getObject(objectName: string): SpriterObject {\r\n        for (var i = 0; i < this._objects.length; i++) {\r\n            var object = this._objects[i];\r\n\r\n            if (object.name === objectName) {\r\n                return object;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public setAnimationSpeedPercent(animationSpeedPercent: number = 100): void {\r\n        this._animationSpeed = animationSpeedPercent / 100;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public playAnimationById(animationId: number): void {\r\n        var animation = this._entity.getAnimationById(animationId);\r\n\r\n        if (animation === undefined || animation === null) {\r\n            console.warn(\"Animation \" + animationId + \" for entity \" + this._entityName + \" does not exist!\");\r\n            return;\r\n        }\r\n\r\n        this.playAnimation(animation);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public playAnimationByName(animationName: string): void {\r\n        var animation = this._entity.getAnimationByName(animationName);\r\n\r\n        if (animation === undefined || animation === null) {\r\n            console.warn(\"Animation \" + animationName + \" for entity \" + this._entityName + \" does not exist!\");\r\n            return;\r\n        }\r\n\r\n        this.playAnimation(animation);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private playAnimation(animation: Animation): void {\r\n        this._animationName = animation.name;\r\n        this._animation = animation\r\n\r\n        this._finished = false;\r\n\r\n        // reset time to beginning of animation and find first from and to keys\r\n        this._mainlineStepper.reset();\r\n        this._mainlineStepper.line = this._animation.mainline;\r\n        this._time = 0;\r\n\r\n        // reset all additional time lines (soundline, varline, tagline, eventline)\r\n        this.resetLines();\r\n\r\n        // reset tags\r\n        this._tags = 0;\r\n\r\n        // reset variables to defaults\r\n        for (var i = 0; i < this._vars.length; i++) {\r\n            this._vars[i].reset();\r\n        }\r\n\r\n        // create bones and sprites - based on data in mainLine key 0\r\n        this.loadKeys(<KeyMainline>this._animation.mainline.at(0), true);\r\n        // first update - to set correct positions\r\n        this.updateCharacter();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private resetLines(): void {\r\n        // reset steppers\r\n        this._lineSteppersCount = 0;\r\n\r\n        // go through all lines (sounds, events, tags, vars)\r\n        for (var i = 0; i < this._animation.linesLength; i++) {\r\n            var line = this._animation.getLineById(i);\r\n\r\n            // if not enough line steppers in array, add new one\r\n            if (this._lineSteppersCount >= this._lineSteppers.length) {\r\n                this._lineSteppers[this._lineSteppersCount] = new LineStepper();\r\n            }\r\n\r\n            // get free stepper\r\n            var stepper = this._lineSteppers[this._lineSteppersCount++];\r\n            stepper.reset();\r\n            stepper.line = line;\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private setBones(bones: Ref[], force: boolean = false): void {\r\n        // switch off all existing bones\r\n        for (var i = 0; i < this._bones.length; i++) {\r\n            if (this._bones[i] !== undefined) {\r\n                this._bones[i].setOn(false);\r\n            }\r\n        }\r\n\r\n        // go through all bones and add new ones if necessary and activate used ones\r\n        for (var i = 0; i < bones.length; i++) {\r\n            var ref = bones[i];\r\n\r\n            // if bone does not exist add it and make active, else make it active only\r\n            if (this._bones[ref.id] === undefined) {\r\n                var newBone = new SpriterBone();\r\n                newBone.type = eObjectType.BONE;\r\n                this._bones[ref.id] = newBone;\r\n            }\r\n\r\n            var bone = this._bones[ref.id];\r\n\r\n            bone.setOn(true);\r\n            bone.parent = ref.parent;\r\n\r\n            if (bone.timelineKey !== ref.key || bone.timeline !== ref.timeline || force) {\r\n                bone.setKey(this._entity, this._animation, ref.timeline, ref.key);\r\n            }\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private setObjects(objects: Ref[], force: boolean = false): void {\r\n        // switch off (kill) all existing sprites\r\n        for (var i = 0; i < this._objects.length; i++) {\r\n            if (this._objects[i] !== undefined) {\r\n                this._objects[i].setOn(false);\r\n            }\r\n        }\r\n\r\n        // go through all objects/sprites and add new ones if necessary and activate used ones\r\n        var zChange = false;\r\n        for (var i = 0; i < objects.length; i++) {\r\n            var ref = objects[i];\r\n\r\n            var object: SpriterObject = null;\r\n            var sprite: Phaser.Sprite = null;\r\n\r\n            // if sprite does not exist add it and make active, else make it active only\r\n            if (this._objects[ref.id] === undefined) {\r\n                sprite = new Phaser.Sprite(this.game, 0, 0, this._textureKey);\r\n                object = new SpriterObject(this, sprite);\r\n                this._objects[ref.id] = object;\r\n                this.add(sprite);\r\n            } else {\r\n                object = this._objects[ref.id];\r\n                sprite = object.sprite;\r\n            }\r\n\r\n            object.parent = ref.parent;\r\n            object.type = this._animation.getTimelineById(ref.timeline).objectType;\r\n\r\n            // is it sprite or any other type of object? (box / point)\r\n            if (object.type === eObjectType.SPRITE) {\r\n                object.setOn(true);\r\n\r\n                if (object.sprite.z !== ref.z) {\r\n                    object.sprite.z = ref.z;\r\n                    zChange = true;\r\n                }\r\n            } else {\r\n                object.setOn(true, true);\r\n\r\n                // TODO remove - debug\r\n                //if (object.type === eObjectType.POINT) {\r\n                //    object.setOn(true);\r\n                //    object.sprite.frameName = \"DebugPoint\";\r\n                //    object.sprite.anchor.set(0.5, 0.5);\r\n                //} else if (object.type === eObjectType.BOX) {\r\n                //    object.setOn(true);\r\n                //    object.sprite.frameName = \"DebugBox\";\r\n                //}\r\n            }\r\n\r\n\r\n            if (object.timelineKey !== ref.key || object.timeline !== ref.timeline || force) {\r\n                object.setKey(this._entity, this._animation, ref.timeline, ref.key);\r\n            }\r\n        }\r\n\r\n        // need to sort sprites?\r\n        if (zChange) {\r\n            this.sort();\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private loadKeys(keyMainline: KeyMainline, force: boolean = false): void {\r\n        this.setBones(keyMainline.boneRefs, force);\r\n        this.setObjects(keyMainline.objectRefs, force);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public updateAnimation(): void {\r\n        if (this._paused || this._finished) {\r\n            return;\r\n        }\r\n\r\n        var mainlineStepper = this._mainlineStepper;\r\n\r\n        // check if in the end of animation and whether to loop or not\r\n        if (this._time > this._animation.length) {\r\n            if (this._animation.loopType === eAnimationLooping.NO_LOOPING) {\r\n                this._time = this._animation.length;\r\n                this._finished = true;\r\n            } else {\r\n                this._time -= this._animation.length;\r\n                this.onLoop.dispatch(this);\r\n            }\r\n        }\r\n\r\n\r\n        // consume all new keys\r\n        var key: KeyMainline;\r\n        while ((key = <KeyMainline>mainlineStepper.step(this._time)) !== null) {\r\n            //console.log(\"got key at: \" + key.time + \" time: \" + this._time);\r\n            this.loadKeys(key);\r\n            mainlineStepper.lastTime = key.time;\r\n        }\r\n\r\n\r\n        this.updateCharacter();\r\n        this.updateLines();\r\n\r\n        if (this._finished) {\r\n            this.onFinish.dispatch(this);\r\n        }\r\n\r\n        this._time += (this.game.time.delta /* this.game.time.physicsElapsedMS */ * this._animationSpeed);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private updateCharacter(): void {\r\n        for (var i = 0; i < this._bones.length; i++) {\r\n            var bone = this._bones[i];\r\n            if (bone.on) {\r\n                var parentSpatial = (bone.parent === -1) ? this._root : this._bones[bone.parent].transformed;\r\n                bone.tween(this._time);\r\n                bone.update(parentSpatial);\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < this._objects.length; i++) {\r\n            var object = this._objects[i];\r\n            if (object.on) {\r\n                var parentSpatial = (object.parent === -1) ? this._root : this._bones[object.parent].transformed;\r\n                object.tween(this._time);\r\n                object.update(parentSpatial);\r\n\r\n                if (object.type === eObjectType.SPRITE) {\r\n                    object.updateSprite();\r\n                } else if (object.type === eObjectType.BOX) {\r\n                    this.onBoxUpdated.dispatch(this, object);\r\n                } else if (object.type === eObjectType.POINT) {\r\n                    this.onPointUpdated.dispatch(this, object);\r\n                }\r\n\r\n                //// TODO remove - debug\r\n                //if (object.type === eObjectType.BOX) {\r\n                //    var frame = this.game.cache.getFrameByName(this._textureKey, \"DebugBox\");\r\n                //    var timeline = this._animation.getTimelineById(object.timeline);\r\n                //    var objDef = this._spriter.getEntityByName(this._entityName).getObjectInfoById(timeline.objectRef);\r\n                //    var transformed = object.transformed;\r\n                //    var objWidth = objDef.width * transformed.scaleX;\r\n                //    var objHeight = objDef.height * transformed.scaleY;\r\n                //    object.sprite.scale.set(objWidth / frame.width, objHeight / frame.height);\r\n                //}\r\n            }\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private updateLines(): void {\r\n        for (var i = this._lineSteppersCount - 1; i >= 0; i--) {\r\n            var lineStepper = this._lineSteppers[i];\r\n            var line = lineStepper.line;\r\n            var key: Key;\r\n\r\n            while ((key = lineStepper.step(this._time)) !== null) {\r\n                switch (line.type) {\r\n                    case eTimelineType.SOUND_LINE:\r\n                        //console.log(\"sound: \" + line.name + \" - key: \" + key.id + \", time: \" + key.time);\r\n                        this.onSound.dispatch(this, line.name);\r\n                        break;\r\n\r\n                    case eTimelineType.EVENT_LINE:\r\n                        //console.log(\"event: \" + line.name + \" - key: \" + key.id + \", time: \" + key.time);\r\n                        this.onEvent.dispatch(this, line.name);\r\n                        break;\r\n\r\n                    case eTimelineType.TAG_LINE:\r\n                        var tagsOn = (<KeyTag>key).tagsOn;\r\n                        var tagChanges = this._tags ^ tagsOn;\r\n                        this._tags = tagsOn;\r\n                        // go through all changes\r\n                        for (var j = 0; j < this._spriter.tagsLength; j++) {\r\n                            var mask = 1 << j;\r\n                            if (tagChanges & mask) {\r\n                                //console.log(\"tag change: \" + this._spriter.getTagById(j).name + \" value: \" + ((tagsOn & mask) > 0) + \" - key: \" + key.id + \", time: \" + key.time);\r\n                                this.onTagChange.dispatch(this, this._spriter.getTagById(j).name, (tagsOn & mask) > 0);\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    case eTimelineType.VAR_LINE:\r\n                        var newVal = (<KeyVariable>key).value;\r\n                        var variable = this._vars[(<Varline>line).varDefId];\r\n                        variable.value = newVal;\r\n                        //console.log(\"var set: \" + variable.name + \" value: \" + variable.value + \" - key: \" + key.id + \", time: \" + key.time);\r\n                        this.onVariableSet.dispatch(this, variable);\r\n                        break;\r\n                }\r\n\r\n                lineStepper.lastTime = key.time;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Spriter }      from \"./Spriter\";\r\nimport { SpriterBone }  from \"./SpriterBone\";\r\nimport { SpriterGroup } from \"./SpriterGroup\";\r\nimport { Animation }    from \"./Structure/Animation\";\r\nimport { CharMapStack } from \"./Structure/CharMapStack\";\r\nimport { Entity }       from \"./Structure/Entity\";\r\nimport { File }         from \"./Structure/File\";\r\nimport { KeyObject }    from \"./Structure/KeyObject\";\r\nimport { eObjectType }  from \"./Structure/Types\";\r\n\r\nexport class SpriterObject extends SpriterBone {\r\n\r\n    private _spriter: Spriter;\r\n    private _charMapStack: CharMapStack;\r\n    private _sprite: Phaser.Sprite;\r\n\r\n    private _file: File;\r\n    private _hide; boolean;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor(parent: SpriterGroup, sprite: Phaser.Sprite) {\r\n        super();\r\n\r\n        this._spriter = parent.spriter;\r\n        this._charMapStack = parent.charMapStack;\r\n        this._sprite = sprite;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get sprite(): Phaser.Sprite {\r\n        return this._sprite;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public setOn(on: boolean, hideSprite: boolean = false): void {\r\n        super.setOn(on);\r\n\r\n        // hide sprite for non-sprite objects\r\n        this._sprite.exists = on && !hideSprite;\r\n        this._sprite.visible = (on && !this._hide && !hideSprite);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public setKey(entity: Entity, animation: Animation, timelineId: number, keyId: number): void {\r\n        super.setKey(entity, animation, timelineId, keyId);\r\n\r\n        // set sprite - skip invisible objects - boxes, points\r\n        if (this.type === eObjectType.SPRITE) {\r\n            var spriteKey = (<KeyObject>this.key);\r\n            var file = this._spriter.getFolderById(spriteKey.folder).getFileById(spriteKey.file);\r\n            this._file = file;\r\n            this.setFile(file);\r\n        } else {\r\n            this._file = null;\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public resetFile(): void {\r\n        if (this.type === eObjectType.SPRITE) {\r\n            this.setFile(this._file);\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private setFile(file: File): void {\r\n        file = this._charMapStack.getFile(file);\r\n\r\n        if (file !== null) {\r\n            this._hide = false;\r\n            this._sprite.frameName = file.name;\r\n        } else {\r\n            this._hide = true;\r\n            this._sprite.visible = false;\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public updateSprite(): void {\r\n        var t = this.transformed;\r\n        var s = this.sprite;\r\n\r\n        s.position.set(t.x, t.y);\r\n        s.scale.set(t.scaleX, t.scaleY);\r\n        s.anchor.set(t.pivotX, t.pivotY);\r\n\r\n        s.alpha = t.alpha;\r\n        s.angle = t.angle;\r\n    }\r\n}\r\n","import { Item }      from \"./Item\";\r\nimport { Baseline }  from \"./Baseline\";\r\nimport { Timeline }  from \"./Timeline\";\r\nimport { IdNameMap } from \"../IdNameMap\";\r\n\r\nexport enum eAnimationLooping { NO_LOOPING, LOOPING };\r\n\r\nexport class Animation extends Item {\r\n\r\n    private _length: number;\r\n    private _loopType: eAnimationLooping;\r\n\r\n    private _mainline: Baseline;\r\n    private _timelines: IdNameMap<Timeline>;\r\n    // other timelines for sound, events, tags, variables\r\n    private _lines: IdNameMap<Baseline>;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor(id: number, name: string, length: number, loopType: eAnimationLooping) {\r\n        super(id, name);\r\n\r\n        this._length = length;\r\n        this._loopType = loopType;\r\n\r\n        this._timelines = new IdNameMap<Timeline>();\r\n        this._lines = new IdNameMap<Baseline>();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get mainline(): Baseline {\r\n        return this._mainline;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public set mainline(mainline: Baseline) {\r\n        this._mainline = mainline;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public addTimeline(timeline: Timeline): void {\r\n        this._timelines.add(timeline, timeline.id, timeline.name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTimelineById(id: number): Timeline {\r\n        return this._timelines.getById(id);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getTimelineByName(name: string): Timeline {\r\n        return this._timelines.getByName(name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public addLine(line: Baseline): void {\r\n        this._lines.add(line, this._lines.length, line.name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getLineById(id: number): Baseline {\r\n        return this._lines.getById(id);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getLineByName(name: string): Baseline {\r\n        return this._lines.getByName(name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get linesLength(): number {\r\n        return this._lines.length;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get length(): number {\r\n        return this._length;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get loopType(): eAnimationLooping {\r\n        return this._loopType;\r\n    }\r\n}\r\n","import { Item } from \"./Item\";\r\nimport { Key }  from \"./Key\";\r\n\r\nexport enum eTimelineType {\r\n    UNKNOWN, MAIN_LINE, TIME_LINE, SOUND_LINE, EVENT_LINE, TAG_LINE, VAR_LINE\r\n}\r\n\r\nexport class Baseline extends Item {\r\n\r\n    private _type: eTimelineType;\r\n\r\n    private _keys: Key[];\r\n\r\n    // -------------------------------------------------------------------------\r\n    public constructor(id: number, name: string = null) {\r\n        super(id, name);\r\n\r\n        this._type = eTimelineType.UNKNOWN;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get type(): eTimelineType {\r\n        return this._type;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public set type(type: eTimelineType) {\r\n        this._type = type;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get keys(): Key[] {\r\n        return this._keys;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public add(key: Key): void {\r\n        if (this._keys === null || this._keys === undefined) {\r\n            this._keys = [];\r\n        }\r\n\r\n        this._keys.push(key);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public at(index: number, loop: boolean = true): Key {\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n\r\n        var length = this._keys.length;\r\n\r\n        if (index >= length) {\r\n            if (loop) {\r\n                index = index % length;\r\n            } else {\r\n                index = length - 1;\r\n            }\r\n        }\r\n\r\n        return this._keys[index];\r\n    }\r\n}\r\n","import { File } from \"./File\";\r\nimport { Item } from \"./Item\";\r\n\r\nexport class CharMap extends Item {\r\n\r\n    private _map: any;\r\n\r\n    // -------------------------------------------------------------------------\r\n    public put(key: string, value: File): void {\r\n        if (this._map === undefined) {\r\n            this._map = {}\r\n        }\r\n\r\n        if (this._map[key] !== undefined) {\r\n            console.error(\"Key with name \" + key + \" already exists\");\r\n        }\r\n\r\n        this._map[key] = value;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public value(key: string): File {\r\n        return this._map[key];\r\n    }\r\n}\r\n","import { CharMap } from \"./CharMap\";\r\nimport { Entity }  from \"./Entity\";\r\nimport { File }    from \"./File\";\r\n\r\nexport class CharMapStack {\r\n\r\n    private _entity: Entity;\r\n\r\n    private _stack: CharMap[] = [];\r\n    private _length: number = 0;\r\n\r\n    // -------------------------------------------------------------------------\r\n    public constructor(entity: Entity) {\r\n        this._entity = entity;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public reset(): void {\r\n        this._length = 0;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public push(charMapName: string): void {\r\n        var charMap = this.getCharMap(charMapName);\r\n\r\n        this._stack[this._length++] = charMap;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public remove(charMapName: string): void {\r\n        var charMap = this.getCharMap(charMapName);\r\n        var index = this.findCharMap(charMap);\r\n\r\n        // shift all items down\r\n        if (index !== -1) {\r\n            for (var i = index; i < this._length - 2; i++) {\r\n                this._stack[i] = this._stack[i + 1];\r\n            }\r\n\r\n            this._stack[--this._length] = null;\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getFile(file: File): File {\r\n        for (var i = this._length - 1; i >= 0; i--) {\r\n            var value = this._stack[i].value(file.name);\r\n            if (value !== undefined) {\r\n                return value;\r\n            }\r\n        }\r\n\r\n        return file;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private getCharMap(charMapName): CharMap {\r\n        var charMap = this._entity.getCharMapByName(charMapName);\r\n\r\n        if (charMapName === null) {\r\n            console.error(\"charmap with name \" + charMapName + \" does not exist\");\r\n        }\r\n\r\n        return charMap;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    private findCharMap(charMap: CharMap): number {\r\n        for (var i = 0; i < this._length; i++) {\r\n            if (this._stack[i] === charMap) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n}\r\n","import { IdNameMap }  from \"../IdNameMap\";\r\nimport { Animation }  from \"./Animation\";\r\nimport { CharMap }    from \"./CharMap\";\r\nimport { Item }       from \"./Item\";\r\nimport { ObjectInfo } from \"./ObjectInfo\";\r\nimport { Variable }   from \"./Variable\";\r\n\r\nexport class Entity extends Item {\r\n\r\n    private _objectInfos: IdNameMap<ObjectInfo>;\r\n    private _charMaps:    IdNameMap<CharMap>\r\n    private _variables:   IdNameMap<Variable>;\r\n    private _animations:  IdNameMap<Animation>;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor(id: number, name: string) {\r\n        super(id, name);\r\n\r\n        this._objectInfos = new IdNameMap<ObjectInfo>();\r\n        this._charMaps    = new IdNameMap<CharMap>();\r\n        this._variables   = new IdNameMap<Variable>();\r\n        this._animations  = new IdNameMap<Animation>();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public addObjectInfo(objectInfo: ObjectInfo): void {\r\n        this._objectInfos.add(objectInfo, objectInfo.id, objectInfo.name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getObjectInfoById(id: number): ObjectInfo {\r\n        return this._objectInfos.getById(id);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getObjectInfoByName(name: string): ObjectInfo {\r\n        return this._objectInfos.getByName(name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public addCharMap(charMap: CharMap): void {\r\n        this._charMaps.add(charMap, charMap.id, charMap.name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getCharMapById(id: number): CharMap {\r\n        return this._charMaps.getById(id);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getCharMapByName(name: string): CharMap {\r\n        return this._charMaps.getByName(name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get charMapsLength(): number {\r\n        return this._charMaps.length;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public addVariable(variable: Variable): void {\r\n        this._variables.add(variable, variable.id, variable.name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVariableById(id: number): Variable {\r\n        return this._variables.getById(id);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getVariableByName(name: string): Variable {\r\n        return this._variables.getByName(name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get variablesLength(): number {\r\n        return this._variables.length;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public addAnimation(animation: Animation): void {\r\n        this._animations.add(animation, animation.id, animation.name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getAnimationById(id: number): Animation {\r\n        return this._animations.getById(id);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getAnimationByName(name: string): Animation {\r\n        return this._animations.getByName(name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get animationsLength(): number {\r\n        return this._animations.length;\r\n    }\r\n}\r\n","import { Item } from \"./Item\";\r\n\r\nexport class File extends Item {\r\n\r\n    private _pivotX: number;\r\n    private _pivotY: number;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor(id: number, name: string, pivotX: number, pivotY: number) {\r\n        super(id, name);\r\n\r\n        this._pivotX = pivotX;\r\n        this._pivotY = pivotY;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get pivotX(): number {\r\n        return this._pivotX;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get pivotY(): number {\r\n        return this._pivotY;\r\n    }\r\n}\r\n","import { Item }      from \"./Item\";\r\nimport { File }      from \"./File\";\r\nimport { IdNameMap } from \"../IdNameMap\";\r\n\r\nexport class Folder extends Item {\r\n\r\n    private _files: IdNameMap<File>;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor(id: number, name: string) {\r\n        super(id, name);\r\n\r\n        this._files = new IdNameMap<File>();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public addFile(file: File): void {\r\n        this._files.add(file, file.id, file.name);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getFileById(id: number): File {\r\n        return this._files.getById(id);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public getFileByName(name: string) {\r\n        return this._files.getByName(name);\r\n    }\r\n}\r\n","export class Item {\r\n\r\n    protected _id: number;\r\n    protected _name: string;\r\n\r\n    // -------------------------------------------------------------------------\r\n    public constructor(id: number, name: string) {\r\n        this._id = id;\r\n        this._name = name;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n}\r\n","export class Key {\r\n\r\n    private _id: number;\r\n    private _time: number;\r\n\r\n    // -------------------------------------------------------------------------\r\n    public constructor(id: number, time: number) {\r\n        this._id = id;\r\n        this._time = time;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get time(): number {\r\n        return this._time;\r\n    }\r\n}\r\n","import { KeyTimeline } from \"./KeyTimeline\";\r\n\r\nexport class KeyBone extends KeyTimeline {\r\n\r\n}\r\n","import { Key } from \"./Key\";\r\nimport { Ref } from \"./Ref\";\r\n\r\nexport class KeyMainline extends Key {\r\n\r\n    private _boneRefs: Ref[] = [];\r\n    private _objectRefs: Ref[] = [];\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get boneRefs(): Ref[] {\r\n        return this._boneRefs;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public addBoneRef(boneRef: Ref): void {\r\n        this._boneRefs.push(boneRef);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get objectRefs(): Ref[] {\r\n        return this._objectRefs;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public addObjectRef(objectRef: Ref): void {\r\n        this._objectRefs.push(objectRef);\r\n    }\r\n}\r\n","import { KeyTimeline } from \"./KeyTimeline\";\r\n\r\nexport class KeyObject extends KeyTimeline {\r\n\r\n    private _folder: number;\r\n    private _file: number;\r\n\r\n    // -------------------------------------------------------------------------\r\n    public setFolderAndFile(folder: number, file: number): void {\r\n        this._folder = folder;\r\n        this._file = file;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get folder(): number {\r\n        return this._folder;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get file(): number {\r\n        return this._file;\r\n    }\r\n}\r\n","import { Key } from \"./Key\";\r\n\r\nexport class KeyTag extends Key {\r\n\r\n    // bit arary with tag indices\r\n    private _tagsOn: number;\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get tagsOn(): number {\r\n        return this._tagsOn;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public set tagsOn(tagsOn: number) {\r\n        this._tagsOn = tagsOn;\r\n    }\r\n}\r\n","import { Key }         from \"./Key\";\r\nimport { SpatialInfo } from \"./SpatialInfo\";\r\nimport { eCurveType }  from \"./Types\";\r\n\r\nexport class KeyTimeline extends Key {\r\n\r\n    protected _spin: number;\r\n\r\n    protected _curveType: eCurveType;\r\n    protected _c1: number;\r\n    protected _c2: number;\r\n    protected _c3: number;\r\n    protected _c4: number;\r\n\r\n    protected _info: SpatialInfo = new SpatialInfo();\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor(id: number, time: number, spin: number) {\r\n        super(id, time);\r\n\r\n        this._spin = spin;\r\n\r\n        this.setCurve(eCurveType.LINEAR);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public setCurve(curveType: eCurveType, c1: number = 0, c2: number = 0, c3: number = 0, c4: number = 0): void {\r\n        this._curveType = curveType;\r\n        this._c1 = c1;\r\n        this._c2 = c2;\r\n        this._c3 = c3;\r\n        this._c4 = c4;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get spin(): number {\r\n        return this._spin;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get curveType(): eCurveType {\r\n        return this._curveType;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get c1(): number {\r\n        return this._c1;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get c2(): number {\r\n        return this._c2;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get c3(): number {\r\n        return this._c3;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get c4(): number {\r\n        return this._c4;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get info(): SpatialInfo {\r\n        return this._info;\r\n    }\r\n}\r\n","import { Key } from \"./Key\";\r\n\r\nexport class KeyVariable extends Key {\r\n\r\n    private _value: number | string;\r\n\r\n    // -------------------------------------------------------------------------\r\n    public constructor(id: number, time: number, value: number | string) {\r\n        super(id, time);\r\n\r\n        this._value = value;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get value(): string | number {\r\n        return this._value;\r\n    }\r\n}\r\n","import { Item }        from \"./Item\";\r\nimport { eObjectType } from \"./Types\";\r\n\r\nexport class ObjectInfo extends Item {\r\n\r\n    private _type: eObjectType;\r\n    private _width: number;\r\n    private _height: number;\r\n    private _pivotX: number;\r\n    private _pivotY: number;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor(id: number, name: string, type: eObjectType, width: number, height: number, pivotX: number, pivotY: number) {\r\n        super(id, name);\r\n\r\n        this._type = type;\r\n        this._width = width;\r\n        this._height = height;\r\n        this._pivotX = pivotX;\r\n        this._pivotY = pivotY;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get type(): eObjectType {\r\n        return this._type;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get pivotX(): number {\r\n        return this._pivotX;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get pivotY(): number {\r\n        return this._pivotY;\r\n    }\r\n}\r\n","export class Ref {\r\n\r\n    public id: number;\r\n    public parent: number;\r\n    public timeline: number;\r\n    public key: number;\r\n    public z: number;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor(id: number, parent: number, timeline: number, key: number, z: number = 0) {\r\n        this.id = id;\r\n        this.parent = parent;\r\n        this.timeline = timeline;\r\n        this.key = key;\r\n        this.z = z;\r\n    }\r\n}\r\n","export class SpatialInfo {\r\n\r\n    public x: number = 0;\r\n    public y: number = 0;\r\n\r\n    public scaleX: number = 1;\r\n    public scaleY: number = 1;\r\n\r\n    public pivotX: number = 0;\r\n    public pivotY: number = 0;\r\n\r\n    public alpha: number = 1;\r\n\r\n    public angle: number = 0;\r\n}\r\n","import { Baseline, eTimelineType } from \"./Baseline\";\r\nimport { eObjectType } from \"./Types\";\r\n\r\nexport class Timeline extends Baseline {\r\n\r\n    private _objectType: eObjectType;\r\n    private _objectRef: number;\r\n\r\n    // -------------------------------------------------------------------------\r\n    constructor(id: number, name: string, type: eObjectType = eObjectType.SPRITE, objectRef: number = -1) {\r\n        super(id, name);\r\n\r\n        this.type = eTimelineType.TIME_LINE;\r\n\r\n        this._objectType = type;\r\n        this._objectRef = objectRef;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get objectType(): eObjectType {\r\n        return this._objectType;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get objectRef(): number {\r\n        return this._objectRef;\r\n    }\r\n}\r\n","export const enum eObjectType {\r\n    SPRITE, BONE, BOX, POINT, SOUND\r\n}\r\n\r\nexport const enum eCurveType {\r\n    LINEAR, INSTANT, QUADRATIC, CUBIC, QUARTIC, QUINTIC, BEZIER\r\n}\r\n\r\nexport const enum eVariableType {\r\n    INT, FLOAT, STRING\r\n}\r\n\r\nexport class Types {\r\n\r\n    private static nameToObjectType = {\r\n        \"sprite\": eObjectType.SPRITE,\r\n        \"bone\": eObjectType.BONE,\r\n        \"box\": eObjectType.BOX,\r\n        \"point\": eObjectType.POINT,\r\n        \"sound\": eObjectType.SOUND\r\n    }\r\n\r\n    private static nameToCurveType = {\r\n        \"instant\": eCurveType.INSTANT,\r\n        \"linear\": eCurveType.LINEAR,\r\n        \"quadratic\": eCurveType.QUADRATIC,\r\n        \"cubic\": eCurveType.CUBIC,\r\n        \"quartic\": eCurveType.QUARTIC,\r\n        \"quintic\": eCurveType.QUINTIC,\r\n        \"bezier\": eCurveType.BEZIER\r\n    }\r\n\r\n    private static nameToVariableType = {\r\n        \"int\": eVariableType.INT,\r\n        \"float\": eVariableType.FLOAT,\r\n        \"string\": eVariableType.STRING\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public static getObjectTypeForName(typeName: string): eObjectType {\r\n\r\n        var type: eObjectType = Types.nameToObjectType[typeName];\r\n\r\n        if (type === undefined) {\r\n            console.error(\"Unknown type of object: \" + typeName);\r\n        }\r\n\r\n        return type;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public static getCurveTypeForName(typeName: string): eCurveType {\r\n\r\n        var type: eCurveType = Types.nameToCurveType[typeName];\r\n\r\n        if (type === undefined) {\r\n            console.error(\"Unknown type of curve: \" + typeName);\r\n        }\r\n\r\n        return type;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public static getVariableTypeForName(typeName: string): eVariableType {\r\n\r\n        var type: eVariableType = Types.nameToVariableType[typeName];\r\n\r\n        if (type === undefined) {\r\n            console.error(\"Unknown type of variable: \" + typeName);\r\n        }\r\n\r\n        return type;\r\n    }\r\n}\r\n","import { Item }          from \"./Item\";\r\nimport { eVariableType } from \"./Types\";\r\n\r\nexport class Variable extends Item {\r\n\r\n    private _type: eVariableType;\r\n    private _default: string | number;\r\n    private _value: string | number;\r\n\r\n    // -------------------------------------------------------------------------\r\n    public constructor(id: number, name: string, type: eVariableType, defaultValue: string | number) {\r\n        super(id, name);\r\n\r\n        this._type = type;\r\n        this._default = defaultValue;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public clone(): Variable {\r\n        return new Variable(this.id, this.name, this.type, this._default);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public reset(): void {\r\n        this.value = this._default;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get type(): eVariableType {\r\n        return this._type;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get value(): string | number {\r\n        return this._value;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public set value(value: string | number) {\r\n        if (this._type === eVariableType.INT) {\r\n            this._value = Math.floor(<number>value);\r\n        } else {\r\n            this._value = value;\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get int(): number {\r\n        return <number>this._value;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get float(): number {\r\n        return <number>this._value;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get string(): string {\r\n        return <string>this._value;\r\n    }\r\n}\r\n","import { Baseline, eTimelineType } from \"./Baseline\";\r\n\r\nexport class Varline extends Baseline {\r\n\r\n    private _varDefId: number;\r\n\r\n    // -------------------------------------------------------------------------\r\n    public constructor(id: number, varDefId: number) {\r\n        super(id, null);\r\n\r\n        this._varDefId = varDefId;\r\n        this.type = eTimelineType.VAR_LINE;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    public get varDefId(): number {\r\n        return this._varDefId;\r\n    }\r\n}\r\n","export * from \"./Spriter\";\r\nexport * from \"./SpriterGroup\";\r\n\r\nexport * from \"./Loader/Loader\";\r\nexport * from \"./Loader/SpriterFile\";\r\nexport * from \"./Loader/SpriterJSON\";\r\nexport * from \"./Loader/SpriterXml\";\r\n//export * from \"./Loader/SpriterBin\";\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/Spriter/index.ts\");\n",""],"names":[],"sourceRoot":""}